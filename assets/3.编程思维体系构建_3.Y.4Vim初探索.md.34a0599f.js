import{_ as a,o as i,c as e,U as l}from"./chunks/framework.489e5108.js";const _=JSON.parse('{"title":"Vim 初探索","description":"","frontmatter":{},"headers":[],"relativePath":"3.编程思维体系构建/3.Y.4Vim初探索.md","filePath":"3.编程思维体系构建/3.Y.4Vim初探索.md","lastUpdated":1696176798000}'),t={name:"3.编程思维体系构建/3.Y.4Vim初探索.md"},s=l('<h1 id="vim-初探索" tabindex="-1">Vim 初探索 <a class="header-anchor" href="#vim-初探索" aria-label="Permalink to &quot;Vim 初探索&quot;">​</a></h1><h2 id="下载-vim" tabindex="-1">下载 vim <a class="header-anchor" href="#下载-vim" aria-label="Permalink to &quot;下载 vim&quot;">​</a></h2><p>vim 被称为编辑器之神</p><div class="warning custom-block"><p class="custom-block-title">💡 看到这一句可能就激发了你学习 vim 的热情，但是看完整篇文章和文章里面的所有参考资料，可能这股来之不易的热情也早就消失了。为了避免这种情况，我给一个小小的建议：</p><ol><li>首先学会盲打，不会的话，不是很建议用 vim / Emacs 这样的编辑器，还是拥抱鼠标吧</li><li>学习使用 hjklia 这六个键，然后理解插入模式和普通模式，再了解怎么退出</li><li>使用 vim 作为日常的编辑工具，在你所有的代码编辑器里面都装上 vim 插件并使用，强迫自己习惯 hjkl 的移动和带模式的输入，习惯按 <code>&lt;ESC&gt;</code></li><li>到这个时候你就会感觉的确可以不用鼠标了，但是有的时候会比较别扭，比如想新建一行时，得按 L 移到行尾，然后按 a 追加，再按回车，远远比鼠标麻烦有没有，这种情况就可以上网查询， <code>vim 如何新建一行</code> ，就会学到 o 可以向下新建一行，O 可以向上新建一行，然后你就能自然地学会更多的操作。</li></ol></div><p>因为其具有着非常完整的生态以及诸多配套的插件，但是第一次使用得你可能感觉很不习惯。</p><p>讲一个笑话，你如何获得一个随机字符串，只要让新人使用 vim 就好了。</p><p>::: waning 💡 不开玩笑，为了让你不小心在命令行模式下进入 vim 又不知道怎么退出时不需要拔电源来退出，先按几次 <code>&lt;ESC&gt;</code> 键（避免你之前不小心按到了 i 或 a 或 o 或等等按键）进入普通模式，然后顺序敲击 <code>:q</code> (冒号 和 q 两个按键)，再按回车就可以退出了。 :::</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">apt-get</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vim</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">apt-get</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vim</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>但是我仍然推荐你尝试使用或者结合 VSC 一起使用，使用习惯后将有效提高你的开发效率。</p><h2 id="如何学习-vim" tabindex="-1">如何学习 vim <a class="header-anchor" href="#如何学习-vim" aria-label="Permalink to &quot;如何学习 vim&quot;">​</a></h2><p>作为程序员，我们大部分时间都花在代码编辑上，所以花点时间掌握某个适合自己的编辑器是非常值得的。通常学习使用一个新的编辑器包含以下步骤：</p><ul><li>阅读教程（比如这节课以及我们为您提供的资源）</li><li>坚持使用它来完成你所有的编辑工作（即使一开始这会让你的工作效率降低）</li><li>随时查阅：如果某个操作看起来像是有更方便的实现方法，一般情况下真的会有。</li></ul><p>如果您能够遵循上述步骤，并且坚持使用新的编辑器完成您所有的文本编辑任务，那么学习一个复杂的代码编辑器的过程一般是这样的：头两个小时，您会学习到编辑器的基本操作，例如打开和编辑文件、保存与退出、浏览缓冲区。当学习时间累计达到 20 个小时之后，您使用新编辑器的效率应该已经和使用老编辑器一样快。在此之后，其益处开始显现：有了足够的知识和肌肉记忆后，使用新编辑器将大大节省你的时间。而现代文本编辑器都是些复杂且强大的工具，永远有新东西可学：学的越多，效率越高。</p><h2 id="vim-的哲学" tabindex="-1"><strong>Vim 的哲学</strong> <a class="header-anchor" href="#vim-的哲学" aria-label="Permalink to &quot;**Vim 的哲学**&quot;">​</a></h2><p>在编程的时候，你会把大量时间花在阅读 / 编辑而不是在写代码上。所以，Vim 是一个_多模态_编辑 器：它对于插入文字和操纵文字有不同的模式。Vim 是可编程的（可以使用 Vimscript 或者像 Python 一样的其他程序语言），Vim 的接口本身也是一个程序语言：键入操作（以及其助记名）是命令，这些命令也是可组合的。Vim 避免了使用鼠标，因为那样太慢了；Vim 甚至避免用 上下左右键因为那样需要太多的手指移动。</p><p>这样的设计哲学使得 Vim 成为了一个能跟上你思维速度的编辑器。</p><h2 id="学习-vim" tabindex="-1">学习 Vim <a class="header-anchor" href="#学习-vim" aria-label="Permalink to &quot;学习 Vim&quot;">​</a></h2><p>如果想要使用他最基本的操作的话，在电脑上键入 vimtutor</p><p>会有官方的教程进行引导哦。</p><h2 id="配置-vim" tabindex="-1">配置 vim <a class="header-anchor" href="#配置-vim" aria-label="Permalink to &quot;配置 vim&quot;">​</a></h2><p>vim 有大量的配置，通过更改./vimrc 文件或者安装插件都可以有效提高你的开发效率，定制属于你个人的编辑器哦～</p><p>快去试试吧</p><h2 id="任务" tabindex="-1">任务 <a class="header-anchor" href="#任务" aria-label="Permalink to &quot;任务&quot;">​</a></h2><p>定制 vim 成为你喜欢的模样，加装足够多的插件和更改足够多的配置让他满足以下几点或以上</p><ul><li>文件管理</li><li>快速回退</li><li>变得好看</li><li>行号</li><li>代码搜索</li><li>模糊搜索</li><li>...............</li></ul><p>可以尝试查看 vim Awesome 哦</p><p><a href="https://vimawesome.com/" target="_blank" rel="noreferrer">vim awesome</a></p><h2 id="拓展阅读" tabindex="-1">拓展阅读 <a class="header-anchor" href="#拓展阅读" aria-label="Permalink to &quot;拓展阅读&quot;">​</a></h2><p><a href="https://github.com/wsdjeg/Learn-Vim_zh_cn" target="_blank" rel="noreferrer">Learn-Vim (the Smart Way) 中文翻译</a></p><p>讲述了 vim 哲学的优秀教程</p>',30),o=[s];function r(n,p,m,c,d,h){return i(),e("div",null,o)}const u=a(t,[["render",r]]);export{_ as __pageData,u as default};
