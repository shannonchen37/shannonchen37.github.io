import{_ as e,o as t,c as a,U as _}from"./chunks/framework.489e5108.js";const m=JSON.parse('{"title":"9.2.3 网络层","description":"","frontmatter":{},"headers":[],"relativePath":"9.计算机网络/9.2.3网络层.md","filePath":"9.计算机网络/9.2.3网络层.md","lastUpdated":1696176798000}'),o={name:"9.计算机网络/9.2.3网络层.md"},p=_('<h1 id="_9-2-3-网络层" tabindex="-1">9.2.3 网络层 <a class="header-anchor" href="#_9-2-3-网络层" aria-label="Permalink to &quot;9.2.3 网络层&quot;">​</a></h1><blockquote><p>Author: 柏喵樱</p><p>copyright reserved</p></blockquote><p>本章节是网络层的开篇章节，我们先做两个约定：</p><ul><li><p>没有提及 IP 协议版本，都是 IPv4（ IPv6 会单独介绍不详细展开）</p></li><li><p>路由表已经配置好了，给 IP 地址就能发到正确的地方（路由技术参照 “路由与交换” 章节）</p></li></ul><p>以上两个约定适用于所有网络层章节。</p><p>在链路层我们已经实现了两个直接相连的设备之间的数据收发，也可以在总线类型的网络上完成数据手法，更成熟一点，可以借助交换机来构建一个具有一定规模的中心化网络。</p><p>但中心化是有极限的，这必然无法承载这个整个互联网，因此，我们需要再往上一层，定义一个新的概念，IP 地址，并完成实现数据包的转发操作，将互联网推向去中心化。</p>',7),r=[p];function s(c,i,l,n,d,h){return t(),a("div",null,r)}const P=e(o,[["render",s]]);export{m as __pageData,P as default};
