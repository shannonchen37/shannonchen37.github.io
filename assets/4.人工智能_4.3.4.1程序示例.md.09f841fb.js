import{_ as l,I as p,o,c as e,j as s,a as n,x as c,U as t}from"./chunks/framework.489e5108.js";const B=JSON.parse('{"title":"程序示例","description":"","frontmatter":{},"headers":[],"relativePath":"4.人工智能/4.3.4.1程序示例.md","filePath":"4.人工智能/4.3.4.1程序示例.md","lastUpdated":1696176798000}'),r={name:"4.人工智能/4.3.4.1程序示例.md"},E=s("h1",{id:"程序示例",tabindex:"-1"},[n("程序示例 "),s("a",{class:"header-anchor",href:"#程序示例","aria-label":'Permalink to "程序示例"'},"​")],-1),y=s("div",{class:"tip custom-block"},[s("p",{class:"custom-block-title"},"TIP"),s("p",null,"阅读程序并运行"),s("p",null,"完成习题")],-1),i={class:"tip custom-block"},u=s("p",{class:"custom-block-title"},"📥",-1),F=t(`<h2 id="hospital-局部搜索" tabindex="-1">Hospital (局部搜索) <a class="header-anchor" href="#hospital-局部搜索" aria-label="Permalink to &quot;Hospital(局部搜索)&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Space</span><span style="color:#E1E4E8;">():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__init__</span><span style="color:#E1E4E8;">(self, height, width, num_hospitals):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;创建一个具有给定维度的新状态空间&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> height                  </span><span style="color:#6A737D;"># 高度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.width </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> width                    </span><span style="color:#6A737D;"># 宽度</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.num_hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> num_hospitals    </span><span style="color:#6A737D;"># 医院数量</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.houses </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">()                   </span><span style="color:#6A737D;"># 住房位置集合</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">()                </span><span style="color:#6A737D;"># 医院位置集合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">add_house</span><span style="color:#E1E4E8;">(self, row, col):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;在状态空间中的特定位置添加住房&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.houses.add((row, col))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">available_spaces</span><span style="color:#E1E4E8;">(self):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;返回住房或医院当前未使用的所有单元格&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 考虑所有可能的单元格</span></span>
<span class="line"><span style="color:#E1E4E8;">        candidates </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">            (row, col)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> row </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> col </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.width)</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 排除所有住房和医院</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> house </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.houses:</span></span>
<span class="line"><span style="color:#E1E4E8;">            candidates.remove(house)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> hospital </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals:</span></span>
<span class="line"><span style="color:#E1E4E8;">            candidates.remove(hospital)</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> candidates</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">hill_climb</span><span style="color:#E1E4E8;">(self, maximum</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">, image_prefix</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">, log</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;执行爬山算法找到解决方案&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 从随机初始化的医院位置开始</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">set</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.num_hospitals):</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals.add(random.choice(</span><span style="color:#79B8FF;">list</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.available_spaces())))</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 执行算法，直到达到最大迭代次数</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> maximum </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> maximum:</span></span>
<span class="line"><span style="color:#E1E4E8;">            count </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#E1E4E8;">            best_neighbors </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#E1E4E8;">            best_neighbor_cost </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 考虑所有医院移动</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> hospital </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;"># 考虑一下那家医院的所有邻居</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> replacement </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.get_neighbors(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">hospital):</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;"># 生成一组相邻的医院</span></span>
<span class="line"><span style="color:#E1E4E8;">                    neighbor </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals.copy()</span></span>
<span class="line"><span style="color:#E1E4E8;">                    neighbor.remove(hospital)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    neighbor.add(replacement)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#6A737D;"># 检查邻居是否是迄今为止最好的</span></span>
<span class="line"><span style="color:#E1E4E8;">                    cost </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.get_cost(neighbor)</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> best_neighbor_cost </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> cost </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> best_neighbor_cost:</span></span>
<span class="line"><span style="color:#E1E4E8;">                        best_neighbor_cost </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cost</span></span>
<span class="line"><span style="color:#E1E4E8;">                        best_neighbors </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [neighbor]</span></span>
<span class="line"><span style="color:#E1E4E8;">                    </span><span style="color:#F97583;">elif</span><span style="color:#E1E4E8;"> best_neighbor_cost </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> cost:</span></span>
<span class="line"><span style="color:#E1E4E8;">                        best_neighbors.append(neighbor)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 没有一个邻居比目前的状态更好</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> best_neighbor_cost </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.get_cost(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals):</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#6A737D;"># 移动到价值最高的邻居</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> random.choice(best_neighbors)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">random_restart</span><span style="color:#E1E4E8;">(self, maximum, image_prefix</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">, log</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">False</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;多次重复爬山算法&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        best_hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">        best_cost </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 重复爬山算法的固定次数</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(maximum):</span></span>
<span class="line"><span style="color:#E1E4E8;">            hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hill_climb()</span></span>
<span class="line"><span style="color:#E1E4E8;">            cost </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.get_cost(hospitals)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> best_cost </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> cost </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> best_cost:</span></span>
<span class="line"><span style="color:#E1E4E8;">                best_cost </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cost</span></span>
<span class="line"><span style="color:#E1E4E8;">                best_hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> hospitals</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> best_hospitals</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_cost</span><span style="color:#E1E4E8;">(self, hospitals):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;计算从住房到最近医院的距离总和&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        cost </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> house </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.houses:</span></span>
<span class="line"><span style="color:#E1E4E8;">            cost </span><span style="color:#F97583;">+=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">min</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#79B8FF;">abs</span><span style="color:#E1E4E8;">(house[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hospital[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]) </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">abs</span><span style="color:#E1E4E8;">(house[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> hospital[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">])</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> hospital </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> hospitals</span></span>
<span class="line"><span style="color:#E1E4E8;">            )</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> cost</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">get_neighbors</span><span style="color:#E1E4E8;">(self, row, col):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;返回尚未包含住房或医院的邻居&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        candidates </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">            (row </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, col),</span></span>
<span class="line"><span style="color:#E1E4E8;">            (row </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, col),</span></span>
<span class="line"><span style="color:#E1E4E8;">            (row, col </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            (row, col </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        ]</span></span>
<span class="line"><span style="color:#E1E4E8;">        neighbors </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> r, c </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> candidates:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (r, c) </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.houses </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> (r, c) </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">continue</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> r </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height </span><span style="color:#F97583;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> c </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.width:</span></span>
<span class="line"><span style="color:#E1E4E8;">                neighbors.append((r, c))</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> neighbors</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">output_image</span><span style="color:#E1E4E8;">(self, filename):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;&quot;&quot;生成所有房屋和医院的图像（不作要求）&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">PIL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> Image, ImageDraw, ImageFont</span></span>
<span class="line"><span style="color:#E1E4E8;">        cell_size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span></span>
<span class="line"><span style="color:#E1E4E8;">        cell_border </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span></span>
<span class="line"><span style="color:#E1E4E8;">        cost_size </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">40</span></span>
<span class="line"><span style="color:#E1E4E8;">        padding </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># Create a blank canvas</span></span>
<span class="line"><span style="color:#E1E4E8;">        img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Image.new(</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;RGBA&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            (</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.width </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size,</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> cost_size </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> padding </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;white&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        house </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Image.open(</span><span style="color:#9ECBFF;">&quot;assets/images/House.png&quot;</span><span style="color:#E1E4E8;">).resize(</span></span>
<span class="line"><span style="color:#E1E4E8;">            (cell_size, cell_size)</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        hospital </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Image.open(</span><span style="color:#9ECBFF;">&quot;assets/images/Hospital.png&quot;</span><span style="color:#E1E4E8;">).resize(</span></span>
<span class="line"><span style="color:#E1E4E8;">            (cell_size, cell_size)</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        font </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ImageFont.truetype(</span><span style="color:#9ECBFF;">&quot;assets/fonts/OpenSans-Regular.ttf&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        draw </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ImageDraw.Draw(img)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height):</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> j </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.width):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#6A737D;"># Draw cell</span></span>
<span class="line"><span style="color:#E1E4E8;">                rect </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">                    (j </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> cell_border,</span></span>
<span class="line"><span style="color:#E1E4E8;">                     i </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> cell_border),</span></span>
<span class="line"><span style="color:#E1E4E8;">                    ((j </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> cell_border,</span></span>
<span class="line"><span style="color:#E1E4E8;">                     (i </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size </span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> cell_border)</span></span>
<span class="line"><span style="color:#E1E4E8;">                ]</span></span>
<span class="line"><span style="color:#E1E4E8;">                draw.rectangle(rect, </span><span style="color:#FFAB70;">fill</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;black&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (i, j) </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.houses:</span></span>
<span class="line"><span style="color:#E1E4E8;">                    img.paste(house, rect[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], house)</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (i, j) </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals:</span></span>
<span class="line"><span style="color:#E1E4E8;">                    img.paste(hospital, rect[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], hospital)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># Add cost</span></span>
<span class="line"><span style="color:#E1E4E8;">        draw.rectangle(</span></span>
<span class="line"><span style="color:#E1E4E8;">            (</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.width </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size,</span></span>
<span class="line"><span style="color:#E1E4E8;">             </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> cost_size </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> padding </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;black&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"><span style="color:#E1E4E8;">        draw.text(</span></span>
<span class="line"><span style="color:#E1E4E8;">            (padding, </span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.height </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;"> cell_size </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> padding),</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;Cost: </span><span style="color:#79B8FF;">{self</span><span style="color:#E1E4E8;">.get_cost(</span><span style="color:#79B8FF;">self</span><span style="color:#E1E4E8;">.hospitals)</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FFAB70;">fill</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;white&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#FFAB70;">font</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">font</span></span>
<span class="line"><span style="color:#E1E4E8;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">        img.save(filename)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建一个状态空间并随机添加住房</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Space(</span><span style="color:#FFAB70;">height</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">width</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">num_hospitals</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">range</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">    s.add_house(random.randrange(s.height), random.randrange(s.width))</span></span>
<span class="line"><span style="color:#6A737D;"># 使用局部搜索来确定医院位置</span></span>
<span class="line"><span style="color:#E1E4E8;">hospitals </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> s.random_restart(</span><span style="color:#FFAB70;">maximum</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">image_prefix</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;hospitals&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">log</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">True</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> random</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Space</span><span style="color:#24292E;">():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__init__</span><span style="color:#24292E;">(self, height, width, num_hospitals):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;创建一个具有给定维度的新状态空间&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> height                  </span><span style="color:#6A737D;"># 高度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.width </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> width                    </span><span style="color:#6A737D;"># 宽度</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.num_hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> num_hospitals    </span><span style="color:#6A737D;"># 医院数量</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.houses </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">set</span><span style="color:#24292E;">()                   </span><span style="color:#6A737D;"># 住房位置集合</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">set</span><span style="color:#24292E;">()                </span><span style="color:#6A737D;"># 医院位置集合</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">add_house</span><span style="color:#24292E;">(self, row, col):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;在状态空间中的特定位置添加住房&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.houses.add((row, col))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">available_spaces</span><span style="color:#24292E;">(self):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;返回住房或医院当前未使用的所有单元格&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 考虑所有可能的单元格</span></span>
<span class="line"><span style="color:#24292E;">        candidates </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">set</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">            (row, col)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> row </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> col </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.width)</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 排除所有住房和医院</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> house </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.houses:</span></span>
<span class="line"><span style="color:#24292E;">            candidates.remove(house)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> hospital </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals:</span></span>
<span class="line"><span style="color:#24292E;">            candidates.remove(hospital)</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> candidates</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">hill_climb</span><span style="color:#24292E;">(self, maximum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, image_prefix</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, log</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;执行爬山算法找到解决方案&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 从随机初始化的医院位置开始</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">set</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.num_hospitals):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals.add(random.choice(</span><span style="color:#005CC5;">list</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.available_spaces())))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 执行算法，直到达到最大迭代次数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">while</span><span style="color:#24292E;"> maximum </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> maximum:</span></span>
<span class="line"><span style="color:#24292E;">            count </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#24292E;">            best_neighbors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">            best_neighbor_cost </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 考虑所有医院移动</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> hospital </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;"># 考虑一下那家医院的所有邻居</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> replacement </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.get_neighbors(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">hospital):</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6A737D;"># 生成一组相邻的医院</span></span>
<span class="line"><span style="color:#24292E;">                    neighbor </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals.copy()</span></span>
<span class="line"><span style="color:#24292E;">                    neighbor.remove(hospital)</span></span>
<span class="line"><span style="color:#24292E;">                    neighbor.add(replacement)</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#6A737D;"># 检查邻居是否是迄今为止最好的</span></span>
<span class="line"><span style="color:#24292E;">                    cost </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.get_cost(neighbor)</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> best_neighbor_cost </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> cost </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> best_neighbor_cost:</span></span>
<span class="line"><span style="color:#24292E;">                        best_neighbor_cost </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cost</span></span>
<span class="line"><span style="color:#24292E;">                        best_neighbors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [neighbor]</span></span>
<span class="line"><span style="color:#24292E;">                    </span><span style="color:#D73A49;">elif</span><span style="color:#24292E;"> best_neighbor_cost </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> cost:</span></span>
<span class="line"><span style="color:#24292E;">                        best_neighbors.append(neighbor)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 没有一个邻居比目前的状态更好</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> best_neighbor_cost </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.get_cost(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals):</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6A737D;"># 移动到价值最高的邻居</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> random.choice(best_neighbors)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">random_restart</span><span style="color:#24292E;">(self, maximum, image_prefix</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">None</span><span style="color:#24292E;">, log</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">False</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;多次重复爬山算法&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        best_hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">        best_cost </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 重复爬山算法的固定次数</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(maximum):</span></span>
<span class="line"><span style="color:#24292E;">            hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hill_climb()</span></span>
<span class="line"><span style="color:#24292E;">            cost </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.get_cost(hospitals)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> best_cost </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> cost </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> best_cost:</span></span>
<span class="line"><span style="color:#24292E;">                best_cost </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cost</span></span>
<span class="line"><span style="color:#24292E;">                best_hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> hospitals</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">...</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> best_hospitals</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_cost</span><span style="color:#24292E;">(self, hospitals):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;计算从住房到最近医院的距离总和&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        cost </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> house </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.houses:</span></span>
<span class="line"><span style="color:#24292E;">            cost </span><span style="color:#D73A49;">+=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">min</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#005CC5;">abs</span><span style="color:#24292E;">(house[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hospital[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]) </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">abs</span><span style="color:#24292E;">(house[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> hospital[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">])</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> hospital </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> hospitals</span></span>
<span class="line"><span style="color:#24292E;">            )</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> cost</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">get_neighbors</span><span style="color:#24292E;">(self, row, col):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;返回尚未包含住房或医院的邻居&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        candidates </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">            (row </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, col),</span></span>
<span class="line"><span style="color:#24292E;">            (row </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, col),</span></span>
<span class="line"><span style="color:#24292E;">            (row, col </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            (row, col </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        ]</span></span>
<span class="line"><span style="color:#24292E;">        neighbors </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> []</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> r, c </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> candidates:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (r, c) </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.houses </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> (r, c) </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">continue</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> r </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height </span><span style="color:#D73A49;">and</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> c </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.width:</span></span>
<span class="line"><span style="color:#24292E;">                neighbors.append((r, c))</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> neighbors</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">output_image</span><span style="color:#24292E;">(self, filename):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;&quot;&quot;生成所有房屋和医院的图像（不作要求）&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">PIL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> Image, ImageDraw, ImageFont</span></span>
<span class="line"><span style="color:#24292E;">        cell_size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span></span>
<span class="line"><span style="color:#24292E;">        cell_border </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span></span>
<span class="line"><span style="color:#24292E;">        cost_size </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">40</span></span>
<span class="line"><span style="color:#24292E;">        padding </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># Create a blank canvas</span></span>
<span class="line"><span style="color:#24292E;">        img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Image.new(</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;RGBA&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            (</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.width </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size,</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> cost_size </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> padding </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;white&quot;</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        house </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Image.open(</span><span style="color:#032F62;">&quot;assets/images/House.png&quot;</span><span style="color:#24292E;">).resize(</span></span>
<span class="line"><span style="color:#24292E;">            (cell_size, cell_size)</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        hospital </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Image.open(</span><span style="color:#032F62;">&quot;assets/images/Hospital.png&quot;</span><span style="color:#24292E;">).resize(</span></span>
<span class="line"><span style="color:#24292E;">            (cell_size, cell_size)</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        font </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ImageFont.truetype(</span><span style="color:#032F62;">&quot;assets/fonts/OpenSans-Regular.ttf&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">30</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        draw </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ImageDraw.Draw(img)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height):</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> j </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.width):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#6A737D;"># Draw cell</span></span>
<span class="line"><span style="color:#24292E;">                rect </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">                    (j </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> cell_border,</span></span>
<span class="line"><span style="color:#24292E;">                     i </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> cell_border),</span></span>
<span class="line"><span style="color:#24292E;">                    ((j </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> cell_border,</span></span>
<span class="line"><span style="color:#24292E;">                     (i </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size </span><span style="color:#D73A49;">-</span><span style="color:#24292E;"> cell_border)</span></span>
<span class="line"><span style="color:#24292E;">                ]</span></span>
<span class="line"><span style="color:#24292E;">                draw.rectangle(rect, </span><span style="color:#E36209;">fill</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;black&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (i, j) </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.houses:</span></span>
<span class="line"><span style="color:#24292E;">                    img.paste(house, rect[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], house)</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (i, j) </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals:</span></span>
<span class="line"><span style="color:#24292E;">                    img.paste(hospital, rect[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], hospital)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># Add cost</span></span>
<span class="line"><span style="color:#24292E;">        draw.rectangle(</span></span>
<span class="line"><span style="color:#24292E;">            (</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.width </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size,</span></span>
<span class="line"><span style="color:#24292E;">             </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> cost_size </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> padding </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;black&quot;</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"><span style="color:#24292E;">        draw.text(</span></span>
<span class="line"><span style="color:#24292E;">            (padding, </span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.height </span><span style="color:#D73A49;">*</span><span style="color:#24292E;"> cell_size </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> padding),</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;Cost: </span><span style="color:#005CC5;">{self</span><span style="color:#24292E;">.get_cost(</span><span style="color:#005CC5;">self</span><span style="color:#24292E;">.hospitals)</span><span style="color:#005CC5;">}</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">fill</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;white&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#E36209;">font</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">font</span></span>
<span class="line"><span style="color:#24292E;">        )</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">        img.save(filename)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 创建一个状态空间并随机添加住房</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Space(</span><span style="color:#E36209;">height</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#E36209;">width</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#E36209;">num_hospitals</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">range</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">15</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">    s.add_house(random.randrange(s.height), random.randrange(s.width))</span></span>
<span class="line"><span style="color:#6A737D;"># 使用局部搜索来确定医院位置</span></span>
<span class="line"><span style="color:#24292E;">hospitals </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> s.random_restart(</span><span style="color:#E36209;">maximum</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#E36209;">image_prefix</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;hospitals&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">log</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">True</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br></div></div><h2 id="production-线性规划" tabindex="-1">Production (线性规划) <a class="header-anchor" href="#production-线性规划" aria-label="Permalink to &quot;Production(线性规划)&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> scipy.optimize</span></span>
<span class="line"><span style="color:#6A737D;"># Objective Function: 50x_1 + 80x_2</span></span>
<span class="line"><span style="color:#6A737D;"># Constraint 1: 5x_1 + 2x_2 &lt;= 20</span></span>
<span class="line"><span style="color:#6A737D;"># Constraint 2: -10x_1 + -12x_2 &lt;= -90</span></span>
<span class="line"><span style="color:#E1E4E8;">result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> scipy.optimize.linprog(</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#79B8FF;">50</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">80</span><span style="color:#E1E4E8;">],  </span><span style="color:#6A737D;"># Cost function: 50x_1 + 80x_2</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">A_ub</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[[</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">], [</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">12</span><span style="color:#E1E4E8;">]],  </span><span style="color:#6A737D;"># Coefficients for inequalities</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#FFAB70;">b_ub</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">90</span><span style="color:#E1E4E8;">],  </span><span style="color:#6A737D;"># Constraints for inequalities: 20 and -90</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> result.success:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;X1: </span><span style="color:#79B8FF;">{round</span><span style="color:#E1E4E8;">(result.x[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;"> hours&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">f</span><span style="color:#9ECBFF;">&quot;X2: </span><span style="color:#79B8FF;">{round</span><span style="color:#E1E4E8;">(result.x[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">)</span><span style="color:#79B8FF;">}</span><span style="color:#9ECBFF;"> hours&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;No solution&quot;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> scipy.optimize</span></span>
<span class="line"><span style="color:#6A737D;"># Objective Function: 50x_1 + 80x_2</span></span>
<span class="line"><span style="color:#6A737D;"># Constraint 1: 5x_1 + 2x_2 &lt;= 20</span></span>
<span class="line"><span style="color:#6A737D;"># Constraint 2: -10x_1 + -12x_2 &lt;= -90</span></span>
<span class="line"><span style="color:#24292E;">result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> scipy.optimize.linprog(</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#005CC5;">50</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">80</span><span style="color:#24292E;">],  </span><span style="color:#6A737D;"># Cost function: 50x_1 + 80x_2</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">A_ub</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">], [</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">12</span><span style="color:#24292E;">]],  </span><span style="color:#6A737D;"># Coefficients for inequalities</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#E36209;">b_ub</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">90</span><span style="color:#24292E;">],  </span><span style="color:#6A737D;"># Constraints for inequalities: 20 and -90</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> result.success:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;X1: </span><span style="color:#005CC5;">{round</span><span style="color:#24292E;">(result.x[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span><span style="color:#005CC5;">}</span><span style="color:#032F62;"> hours&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">f</span><span style="color:#032F62;">&quot;X2: </span><span style="color:#005CC5;">{round</span><span style="color:#24292E;">(result.x[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">)</span><span style="color:#005CC5;">}</span><span style="color:#032F62;"> hours&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;No solution&quot;</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="schedule-约束满足" tabindex="-1">Schedule (约束满足) <a class="header-anchor" href="#schedule-约束满足" aria-label="Permalink to &quot;Schedule(约束满足)&quot;">​</a></h2><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;&quot;&quot;没有任何启发式或推理的自然回溯搜索&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">VARIABLES</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;A&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;D&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;G&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#79B8FF;">CONSTRAINTS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;A&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;A&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;D&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;D&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;G&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;G&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">backtrack</span><span style="color:#E1E4E8;">(assignment):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;运行回溯搜索以查找赋值&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 检查赋值是否完成</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(assignment) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">len</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">VARIABLES</span><span style="color:#E1E4E8;">):</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> assignment</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 尝试一个新变量</span></span>
<span class="line"><span style="color:#E1E4E8;">    var </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> select_unassigned_variable(assignment)</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> [</span><span style="color:#9ECBFF;">&quot;Monday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Tuesday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Wednesday&quot;</span><span style="color:#E1E4E8;">]:</span></span>
<span class="line"><span style="color:#E1E4E8;">        new_assignment </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> assignment.copy()</span></span>
<span class="line"><span style="color:#E1E4E8;">        new_assignment[var] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> value</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> consistent(new_assignment):</span></span>
<span class="line"><span style="color:#E1E4E8;">            result </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> backtrack(new_assignment)</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> result </span><span style="color:#F97583;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> result</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">select_unassigned_variable</span><span style="color:#E1E4E8;">(assignment):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;按顺序选择尚未赋值的变量&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> variable </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">VARIABLES</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> variable </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> assignment:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> variable</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">None</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">def</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">consistent</span><span style="color:#E1E4E8;">(assignment):</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">&quot;&quot;&quot;检查分配是否一致&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (x, y) </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CONSTRAINTS</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 仅考虑变量赋值都已指定的弧</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> x </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> assignment </span><span style="color:#F97583;">or</span><span style="color:#E1E4E8;"> y </span><span style="color:#F97583;">not</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> assignment:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">continue</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#6A737D;"># 如果两者的值相同，则不一致</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> assignment[x] </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> assignment[y]:</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">False</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;"># 如果没有不一致的地方，那么赋值是一致的</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">solution </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> backtrack(</span><span style="color:#79B8FF;">dict</span><span style="color:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(solution)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;&quot;&quot;没有任何启发式或推理的自然回溯搜索&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#005CC5;">VARIABLES</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;D&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;G&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#005CC5;">CONSTRAINTS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;D&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;D&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;G&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;G&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">backtrack</span><span style="color:#24292E;">(assignment):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;运行回溯搜索以查找赋值&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 检查赋值是否完成</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(assignment) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">len</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">VARIABLES</span><span style="color:#24292E;">):</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> assignment</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 尝试一个新变量</span></span>
<span class="line"><span style="color:#24292E;">    var </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> select_unassigned_variable(assignment)</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> [</span><span style="color:#032F62;">&quot;Monday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Tuesday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Wednesday&quot;</span><span style="color:#24292E;">]:</span></span>
<span class="line"><span style="color:#24292E;">        new_assignment </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> assignment.copy()</span></span>
<span class="line"><span style="color:#24292E;">        new_assignment[var] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> value</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> consistent(new_assignment):</span></span>
<span class="line"><span style="color:#24292E;">            result </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> backtrack(new_assignment)</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> result </span><span style="color:#D73A49;">is</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">                </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> result</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">select_unassigned_variable</span><span style="color:#24292E;">(assignment):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;按顺序选择尚未赋值的变量&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> variable </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">VARIABLES</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> variable </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> assignment:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> variable</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">None</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">def</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">consistent</span><span style="color:#24292E;">(assignment):</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">&quot;&quot;&quot;检查分配是否一致&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (x, y) </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CONSTRAINTS</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 仅考虑变量赋值都已指定的弧</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> x </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> assignment </span><span style="color:#D73A49;">or</span><span style="color:#24292E;"> y </span><span style="color:#D73A49;">not</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> assignment:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">continue</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6A737D;"># 如果两者的值相同，则不一致</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> assignment[x] </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> assignment[y]:</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">False</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;"># 如果没有不一致的地方，那么赋值是一致的</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">solution </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> backtrack(</span><span style="color:#005CC5;">dict</span><span style="color:#24292E;">())</span></span>
<span class="line"><span style="color:#005CC5;">print</span><span style="color:#24292E;">(solution)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br></div></div><p>使用命令 <code>pip install python-constraint</code> 安装 constraint 库</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> constraint </span><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">problem </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> Problem()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 添加变量</span></span>
<span class="line"><span style="color:#E1E4E8;">problem.addVariables(</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;A&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;D&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;G&quot;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;Monday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Tuesday&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;Wednesday&quot;</span><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 添加约束</span></span>
<span class="line"><span style="color:#79B8FF;">CONSTRAINTS</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;A&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;A&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;D&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;B&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;C&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;D&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;E&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;G&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">    (</span><span style="color:#9ECBFF;">&quot;F&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;G&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> x, y </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">CONSTRAINTS</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">    problem.addConstraint(</span><span style="color:#F97583;">lambda</span><span style="color:#E1E4E8;"> x, y: x </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> y, (x, y))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Solve problem</span></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> solution </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> problem.getSolutions():</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">print</span><span style="color:#E1E4E8;">(solution)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">from</span><span style="color:#24292E;"> constraint </span><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">problem </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> Problem()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 添加变量</span></span>
<span class="line"><span style="color:#24292E;">problem.addVariables(</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;D&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;G&quot;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;Monday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Tuesday&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;Wednesday&quot;</span><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 添加约束</span></span>
<span class="line"><span style="color:#005CC5;">CONSTRAINTS</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;D&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;B&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;C&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;D&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;E&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;G&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">    (</span><span style="color:#032F62;">&quot;F&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;G&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">]</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> x, y </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">CONSTRAINTS</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">    problem.addConstraint(</span><span style="color:#D73A49;">lambda</span><span style="color:#24292E;"> x, y: x </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> y, (x, y))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># Solve problem</span></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> solution </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> problem.getSolutions():</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">print</span><span style="color:#24292E;">(solution)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="quiz" tabindex="-1">Quiz <a class="header-anchor" href="#quiz" aria-label="Permalink to &quot;Quiz&quot;">​</a></h2><ol><li><p>对于以下哪一项，即使多次重新运行算法，也会始终找到相同的解决方案？ 假设一个问题的目标是最小化成本函数，并且状态空间中的每个状态都有不同的成本。</p><ol><li>Steepest-ascent hill-climbing，每次从不同的初始状态开始</li><li>Steepest-ascent hill-climbing，每次都从相同的初始状态开始</li><li>Stochastic hill-climbing，每次从不同的初始状态开始</li><li>Stochastic hill-climbing，每次都从相同的初始状态开始</li><li>无论是 steepest-ascent 还是 stochastic hill climbing，只要你总是从同一个初始状态开始</li><li>无论是 steepest-ascent 还是 stochastic hill climbing，只要每次都从不同的初始状态开始</li><li>没有任何版本的爬山算法能保证每次都能得到相同的解决方案</li></ol></li><li><p>下面两个问题都会问你关于下面描述的优化问题。 一位农民正在尝试种植两种作物， <code>作物 1</code> 和 <code>作物 2</code> ，并希望实现利润最大化。农民将从种植的每英亩 <code>作物 1</code> 中获得 500 美元的利润，从种植的每英亩 <code>作物 2</code> 中获得 400 美元的利润。然而，农民今天需要在早上 7 点到晚上 7 点之间的 12 个小时内完成所有的种植。种植一英亩的 <code>作物 1</code> 需要 3 个小时，种植一英亩 <code>作物 2</code> 需要 2 个小时。农民在供应方面也很有限：他有足够的供应种植 10 英亩的 <code>作物 1</code> ，有足够的资源种植 4 英亩的 <code>作物 2</code> 。假设变量 C1 表示要种植的 <code>作物 1</code> 的英亩数，变量 C2 表示要种植 <code>作物 2</code> 的英亩数。</p><p>对于这个问题，什么是有效的目标函数？</p><ol><li>10 * C1 + 4 * C2</li><li>-3 * C1 - 2 * C2</li><li>500 * 10 * C1 + 400 * 4 * C2</li><li>500 * C1 + 400 * C2</li><li>C1 + C2</li></ol></li><li><p>这个问题的制约因素是什么？</p><ol><li>3 * C1 + 2 * C2 &lt;= 12, C1 &lt;= 10, C2 &lt;= 4</li><li>3 * C1 + 2 * C2 &lt;= 12, C1 + C2 &lt;= 14</li><li>3 * C1 &lt;= 10, 2 * C2 &lt;= 4</li><li>C1 + C2 &lt;= 12, C1 + C2 &lt;= 14</li></ol></li><li><p>下面的问题将问你以下考试安排约束满足图，其中每个节点代表一个课程。每门课程都与可能的考试日的初始域相关联（大多数课程可能在周一、周二或周三；少数课程已经被限制在一天内）。两个节点之间的边意味着这两个课程必须在不同的日子进行考试。</p><p>在对整个问题满足弧一致性之后，变量 C、D 和 E 的结果域是什么？</p><ol><li>C 的域是 {Mon，Tue}，D 的域是 {Wed}，E 的域是 {Mon}</li><li>C 的域是 {Mon}，D 的域是 {Wed}，E 的域为 {Tue}</li><li>C 的域是 {Mon}，D 的域是 {Tue}，E 的域为 {Wed}</li><li>C 的域是 {Mon}，D 的域是 {Mon，Wed}，E 的域是 {Tue，Wed}</li><li>C 的域是 {Mon，Tue，Wed}，D 的域是 {Mon，Wed}，E 的域是 {Mon，Tue，Wed}</li><li>C 的域是 {Mon}，D 的域是 {Mon，Wed}，E 的域是 {Mon，Tue，Wed}</li></ol></li></ol>`,10);function b(m,C,q,A,d,h){const a=p("Download");return o(),e("div",null,[E,y,s("div",i,[u,s("p",null,[n("本节附件下载 "),c(a,{url:"https://cdn.xyxsw.site/code/4-Lecture.zip"})])]),F])}const f=l(r,[["render",b]]);export{B as __pageData,f as default};
