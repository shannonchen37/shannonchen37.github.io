import{_ as s,o as n,c as a,U as l}from"./chunks/framework.489e5108.js";const u=JSON.parse('{"title":"7.增大距离","description":"","frontmatter":{},"headers":[],"relativePath":"3.编程思维体系构建/3.4.6.7.增大距离.md","filePath":"3.编程思维体系构建/3.4.6.7.增大距离.md","lastUpdated":1696176798000}'),p={name:"3.编程思维体系构建/3.4.6.7.增大距离.md"},o=l(`<h1 id="_7-增大距离" tabindex="-1">7. 增大距离 <a class="header-anchor" href="#_7-增大距离" aria-label="Permalink to &quot;7.增大距离&quot;">​</a></h1><p><em>一个典型的冒险包含许多谜题。众所周知，<a href="https://en.wikipedia.org/wiki/Infocom" target="_blank" rel="noreferrer">Infocom</a> 的冒险很难完成。解决每个难题可能需要数周甚至数月的反复试验。</em></p><p><em>当玩家操纵角色失败后，如果只是返回 “你不能这么操作” 来回应玩家，会很 nt，很没意思。</em></p><p><em>它忽略了电脑游戏的一个重要方面，而这也是生活本身的一部分：玩家必须从错误中吸取教训。</em></p><p>当你的游戏反复输入东西都是，你不能这样做的时候，会显得很无聊的。</p><p><em>冒险游戏至少应该做的是解释为什么玩家的命令无法完成：“你不能这样做，因为......” 这有助于使虚拟世界更具说服力，故事更可信，游戏更有趣。</em></p><p>我们已经付出了相当大的努力让游戏解释<strong>为什么</strong>某些命令是无效的。只需看看<em>名词.c，inventory.c，location.c</em>，<em>move.c</em> 中的许多<em> printf</em> 调用。但随着游戏变得越来越复杂，这正成为一个相当大的负担。我们需要一种更结构化的方法来检测和处理错误情况。这就是我们在本章中将要讨论的内容。</p><p>大多数命令对一个或多个对象进行操作，例如：</p><ul><li>玩家拿起一件物品，然后把它交给另一个 NPC。</li><li>玩家沿着一条通道到另一个位置。</li></ul><p>首先要检查的（在<a href="http://en.wikipedia.org/wiki/Parsing" target="_blank" rel="noreferrer">解析器</a>捕获检测是否会有明显<a href="http://en.wikipedia.org/wiki/Typographical_error" target="_blank" rel="noreferrer">拼写错误</a>之后）是这些对象<strong>是否存在</strong>；</p><p>失败应该导致类似 “这里没有...“或” 你看不到任何东西...” 等文字出现。在本章中，我们将构建一个通用函数，每个命令都可以使用它来找出玩家是否在可及的范围内。</p><p>你可能认为我们只需要区分两种情况：对象在这里，或者它不在这里。</p><p>但是许多命令需要更多的渐变，而不仅仅是 “这里” 和 “不在这里”。例子：</p><ul><li>要使用武器或工具，玩家必须持有它；仅仅在现场存在是不够的。</li><li>你不能放下一个你没拿起来的道具，也不能拿起一个已经有的东西</li><li>如果你跟商人买东西的时候，他店里东西你不能随便拿</li></ul><table><thead><tr><th>distSelf</th><th>对象是玩家</th><th>object == player</th></tr></thead><tbody><tr><td>distHeld</td><td>玩家持有物体</td><td>object-&gt;location == player</td></tr><tr><td>distHeldContained</td><td>玩家拿着另一个包含该物体的物体（例如袋子）</td><td>object-&gt;location != NULL &amp;&amp;<br>object-&gt;location-&gt;location == player</td></tr><tr><td>distLocation</td><td>对象是玩家的位置</td><td>object == player-&gt;location</td></tr><tr><td>distHere</td><td>对象位于玩家的位置</td><td>object-&gt;location == player-&gt;location</td></tr><tr><td>distHereContained</td><td>一个物体（NPC 或 “容器”）存在于玩家的位置，正在拿着另一个物体</td><td>object-&gt;location != NULL &amp;&amp;<br>object-&gt;location-&gt;location == player-&gt;location</td></tr><tr><td>distOverthere</td><td>对象是附近的位置</td><td>getPassage(player-&gt;location, object) != NULL</td></tr></tbody></table><p>第一种情况（对象是玩家）可能看起来微不足道，但它仍然很重要。例如，命令 “examine yourself”<em> 不应该</em>返回 “这里没有你自己”。</p><p>我试图遵循一个逻辑顺序：附近的事物最高优先级，随后优先级会变低。</p><table><thead><tr><th>distNotHere</th><th>对象不在这里（或看起来）不在这里</th><th></th></tr></thead><tbody><tr><td>distUnknownObject</td><td>解析器无法识别输入的名词</td><td>object == NULL</td></tr></tbody></table><p>请注意，我们有七种不同的 “这里” 案例，但只有一种是 “不在这里”。这是因为通常，游戏只需要提供有关玩家可以感知的事物的信息。如果它不在这里，那么就没什么可说的了。</p><p>在最左边的列中，我们为每个案例提出了一个符号名称。我们将在名为 <strong>DISTANCE</strong> 的<a href="http://en.wikipedia.org/wiki/Enumerated_type" target="_blank" rel="noreferrer">枚举</a>中收集这些名称。</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   distSelf,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHeld,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHeldContained,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distLocation,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHereContained,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distOverthere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distNotHere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distUnknownObject</span></span>
<span class="line"><span style="color:#E1E4E8;">} DISTANCE;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   distSelf,</span></span>
<span class="line"><span style="color:#24292E;">   distHeld,</span></span>
<span class="line"><span style="color:#24292E;">   distHeldContained,</span></span>
<span class="line"><span style="color:#24292E;">   distLocation,</span></span>
<span class="line"><span style="color:#24292E;">   distHere,</span></span>
<span class="line"><span style="color:#24292E;">   distHereContained,</span></span>
<span class="line"><span style="color:#24292E;">   distOverthere,</span></span>
<span class="line"><span style="color:#24292E;">   distNotHere,</span></span>
<span class="line"><span style="color:#24292E;">   distUnknownObject</span></span>
<span class="line"><span style="color:#24292E;">} DISTANCE;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">💡 typedef 以及枚举类 enum 之前有接触过吗？没有接触过的话就去学习一下吧。</p></div><p>在最右边的列中，我们为每个情况提出了一个满足条件。通过一些重新洗牌，我们可以很容易地将其转换为计算对象 “距离” 的函数（从玩家的角度来看）：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">DISTANCE </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> to </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">                               </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distUnknownObject </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from                               </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distSelf </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from                     </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHeld </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from-&gt;location                     </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distLocation </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from-&gt;location           </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(from-&gt;location, to) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distOverthere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">                     </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distNotHere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to-&gt;location-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from           </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHeldContained </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to-&gt;location-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from-&gt;location </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHereContained </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                     distNotHere;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">DISTANCE </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> to </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">                               </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distUnknownObject </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from                               </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distSelf </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from                     </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHeld </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from-&gt;location                     </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distLocation </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from-&gt;location           </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(from-&gt;location, to) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distOverthere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">                     </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distNotHere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to-&gt;location-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from           </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHeldContained </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to-&gt;location-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from-&gt;location </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHereContained </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                                                     distNotHere;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">🤔 思考题：</p><p>你是否有其他方法实现这个功能？</p><p>注：自行实验即可</p></div><p>就这样！我们可以调用此函数并对其返回值进行比较。例如，我们在 noun*.c * 中有以下代码：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(player</span><span style="color:#F97583;">-&gt;</span><span style="color:#FFAB70;">location</span><span style="color:#E1E4E8;">, obj) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           (obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">            (obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">             obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location))))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">(obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(player</span><span style="color:#D73A49;">-&gt;</span><span style="color:#E36209;">location</span><span style="color:#24292E;">, obj) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           (obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">            (obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">             obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location))))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>现在，我们可以用适当的距离检查替换每个子条件：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> distSelf </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> distLocation </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> distHeld </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> distHere </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> distOverthere </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> distHeldContained </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> distHereContained))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> distSelf </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> distLocation </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> distHeld </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> distHere </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> distOverthere </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> distHeldContained </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> distHereContained))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>这可以简化为：</p><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj) </span><span style="color:#F97583;">&gt;=</span><span style="color:#E1E4E8;"> distNotHere)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj) </span><span style="color:#D73A49;">&gt;=</span><span style="color:#24292E;"> distNotHere)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">🤔 尝试理解一下这样做的意义</p></div><p>这只是一个例子，让你对这个概念有所了解；您将在下面找到<em> noun.c</em> 的实际实现，看起来略有不同。</p><p>是时候把事情落实到位了。枚举 <em>DISTANCE</em> 和函数 <em>getDistance</em> 的定义被添加到 <em>misc.h</em> 和 <em>misc.c</em> 中，因为我们将在多个模块中使用它们。</p><h2 id="misc-h" tabindex="-1">misc.h <a class="header-anchor" href="#misc-h" aria-label="Permalink to &quot;misc.h&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   distSelf,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHeld,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHeldContained,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distLocation,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHereContained,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distOverthere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distNotHere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distUnknownObject</span></span>
<span class="line"><span style="color:#E1E4E8;">} DISTANCE;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">container</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//是否持有物体</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//获取通道</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> DISTANCE </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//计算距离</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">actorHere</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">location</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   distSelf,</span></span>
<span class="line"><span style="color:#24292E;">   distHeld,</span></span>
<span class="line"><span style="color:#24292E;">   distHeldContained,</span></span>
<span class="line"><span style="color:#24292E;">   distLocation,</span></span>
<span class="line"><span style="color:#24292E;">   distHere,</span></span>
<span class="line"><span style="color:#24292E;">   distHereContained,</span></span>
<span class="line"><span style="color:#24292E;">   distOverthere,</span></span>
<span class="line"><span style="color:#24292E;">   distNotHere,</span></span>
<span class="line"><span style="color:#24292E;">   distUnknownObject</span></span>
<span class="line"><span style="color:#24292E;">} DISTANCE;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">container</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//是否持有物体</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//获取通道</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> DISTANCE </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//计算距离</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">actorHere</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">location</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="misc-c" tabindex="-1">misc.c <a class="header-anchor" href="#misc-c" aria-label="Permalink to &quot;misc.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">container</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> container;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> to </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from, obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj-&gt;destination </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> to)</span></span>
<span class="line"><span style="color:#E1E4E8;">         {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">DISTANCE </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> to </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">                               </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distUnknownObject </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from                               </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distSelf </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from, to)                      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHeld </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(to, from)                      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distLocation </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from-&gt;location, to)            </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from, to-&gt;location)            </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHeldContained </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from-&gt;location, to-&gt;location)  </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHereContained </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(from-&gt;location, to) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distOverthere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                     distNotHere;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">actorHere</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(player-&gt;location, obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> guard)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">location</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> player </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(location, obj))</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (count</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You see:</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> count;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">container</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> container;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> to </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from, obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj-&gt;destination </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> to)</span></span>
<span class="line"><span style="color:#24292E;">         {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">DISTANCE </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> to </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">                               </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distUnknownObject </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from                               </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distSelf </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from, to)                      </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHeld </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(to, from)                      </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distLocation </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from-&gt;location, to)            </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from, to-&gt;location)            </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHeldContained </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from-&gt;location, to-&gt;location)  </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHereContained </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(from-&gt;location, to) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distOverthere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                                                     distNotHere;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">actorHere</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(player-&gt;location, obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> guard)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">location</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> player </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(location, obj))</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (count</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You see:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> count;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><p>注意：isHolding 这个函数之后我们将在各个地方使用</p><h2 id="location-h" tabindex="-1">location.h <a class="header-anchor" href="#location-h" aria-label="Permalink to &quot;location.h&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeLook</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeGo</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeLook</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeGo</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>在函数 <em>executeGo</em> 中，我们可以用检查距离来替换大多数 <em>if</em> 条件。</p><h2 id="location-c" tabindex="-1">location.c <a class="header-anchor" href="#location-c" aria-label="Permalink to &quot;location.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;noun.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeLook</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (noun </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">strcmp</span><span style="color:#E1E4E8;">(noun, </span><span style="color:#9ECBFF;">&quot;around&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You are in </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, player-&gt;location-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t understand what you want to see.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeGo</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getVisible</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;where you want to go&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj))</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distOverthere:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;OK.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      player-&gt;location </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">executeLook</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;around&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distNotHere:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You don&#39;t see any </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> here.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">//上述情况均为出现</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">destination </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;OK.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">         player-&gt;location </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj-&gt;destination;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">executeLook</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;around&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You can&#39;t get much closer than this.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;noun.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeLook</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (noun </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">strcmp</span><span style="color:#24292E;">(noun, </span><span style="color:#032F62;">&quot;around&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You are in </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, player-&gt;location-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t understand what you want to see.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeGo</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getVisible</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;where you want to go&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj))</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distOverthere:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;OK.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      player-&gt;location </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">executeLook</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;around&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distNotHere:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You don&#39;t see any </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> here.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">//上述情况均为出现</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">destination </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;OK.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">         player-&gt;location </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj-&gt;destination;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">executeLook</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;around&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You can&#39;t get much closer than this.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">🤔 思考题：你能否为 switch 函数增加更多 case 来完善判断条件？</p></div><p>函数 <em>executeGet</em> 也是如此。</p><h2 id="inventory-h" tabindex="-1"><strong>inventory.h</strong> <a class="header-anchor" href="#inventory-h" aria-label="Permalink to &quot;**inventory.h**&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeGet</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeDrop</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeAsk</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeGive</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeInventory</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeGet</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeDrop</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeAsk</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeGive</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeInventory</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="inventory-c" tabindex="-1"><strong>inventory.c</strong> <a class="header-anchor" href="#inventory-c" aria-label="Permalink to &quot;**inventory.c**&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;noun.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;move.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeGet</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getVisible</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;what you want to get&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj))</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distSelf:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You should not be doing that to yourself.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distHeld:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You already have </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#FFAB70;">description</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distOverthere:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Too far away, move closer please.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> guard)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You should ask </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> nicely.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, obj-&gt;location-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">moveObject</span><span style="color:#E1E4E8;">(obj, player);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeDrop</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">moveObject</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getPossession</span><span style="color:#E1E4E8;">(player, </span><span style="color:#9ECBFF;">&quot;drop&quot;</span><span style="color:#E1E4E8;">, noun), player-&gt;location);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeAsk</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">moveObject</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getPossession</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">actorHere</span><span style="color:#E1E4E8;">(), </span><span style="color:#9ECBFF;">&quot;ask&quot;</span><span style="color:#E1E4E8;">, noun), player);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeGive</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">moveObject</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getPossession</span><span style="color:#E1E4E8;">(player, </span><span style="color:#9ECBFF;">&quot;give&quot;</span><span style="color:#E1E4E8;">, noun), </span><span style="color:#B392F0;">actorHere</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeInventory</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(player) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You are empty-handed.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;noun.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;move.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeGet</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getVisible</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;what you want to get&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj))</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distSelf:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You should not be doing that to yourself.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distHeld:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You already have </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#E36209;">description</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distOverthere:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Too far away, move closer please.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> guard)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You should ask </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> nicely.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, obj-&gt;location-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">moveObject</span><span style="color:#24292E;">(obj, player);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeDrop</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">moveObject</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getPossession</span><span style="color:#24292E;">(player, </span><span style="color:#032F62;">&quot;drop&quot;</span><span style="color:#24292E;">, noun), player-&gt;location);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeAsk</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">moveObject</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getPossession</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">actorHere</span><span style="color:#24292E;">(), </span><span style="color:#032F62;">&quot;ask&quot;</span><span style="color:#24292E;">, noun), player);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeGive</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">moveObject</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getPossession</span><span style="color:#24292E;">(player, </span><span style="color:#032F62;">&quot;give&quot;</span><span style="color:#24292E;">, noun), </span><span style="color:#6F42C1;">actorHere</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeInventory</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(player) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You are empty-handed.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><p>最后，我们将调整 noun*.c<em> 中的约束。我们正在向函数</em> getObject * 添加两个参数，以便找到特定名词的匹配项，同时忽略任何被认为不存在的对象。这将在下一章中得到真正的回报，我们将在下一章中介绍具有相同标签的不同对象。</p><h2 id="noun-h" tabindex="-1">noun.h <a class="header-anchor" href="#noun-h" aria-label="Permalink to &quot;noun.h&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">getVisible（</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">intention， </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">noun）;</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">getPossession（OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">from， </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">verb， </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">noun）;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">getVisible（</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">intention， </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">noun）;</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">getPossession（OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">from， </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">verb， </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">noun）;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="noun-c" tabindex="-1">noun.c <a class="header-anchor" href="#noun-c" aria-label="Permalink to &quot;noun.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">objectHasTag</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> noun </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">noun </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\0</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">strcmp</span><span style="color:#E1E4E8;">(noun, obj-&gt;tag) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, DISTANCE </span><span style="color:#FFAB70;">maxDistance</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj, </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">objectHasTag</span><span style="color:#E1E4E8;">(obj, noun) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(from, obj) </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> maxDistance)</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#6A737D;">//只考虑与对象距离小于或等于最大距离的物体</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getVisible</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">intention</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, player, distOverthere);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#6A737D;">//玩家看不到的自动忽略</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, player, distNotHere) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t understand </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, intention);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You don&#39;t see any </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> here.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getPossession</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">verb</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t understand who you want to </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, verb);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ((obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, from, distHeldContained)) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">       </span><span style="color:#6A737D;">//限制范围</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, player, distNotHere) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t understand what you want to </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, verb);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You are not holding any </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;There appears to be no </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> you can get from </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                noun, from-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You should not be doing that to </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">objectHasTag</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> noun </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">noun </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\0</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">strcmp</span><span style="color:#24292E;">(noun, obj-&gt;tag) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, DISTANCE </span><span style="color:#E36209;">maxDistance</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj, </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">objectHasTag</span><span style="color:#24292E;">(obj, noun) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(from, obj) </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> maxDistance)</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6A737D;">//只考虑与对象距离小于或等于最大距离的物体</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getVisible</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">intention</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, player, distOverthere);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6A737D;">//玩家看不到的自动忽略</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, player, distNotHere) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t understand </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, intention);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You don&#39;t see any </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> here.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getPossession</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">verb</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t understand who you want to </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, verb);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ((obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, from, distHeldContained)) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">       </span><span style="color:#6A737D;">//限制范围</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, player, distNotHere) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t understand what you want to </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, verb);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You are not holding any </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;There appears to be no </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> you can get from </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                noun, from-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You should not be doing that to </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">🤔 思考题：你能理解什么时候加 const，什么时候不用吗？</p></div><p>在本章中，<em>距离</em>的概念主要用于在游戏可以给用户的不同响应之间进行选择。但是，距离的好处并不局限于<strong>输出</strong>端；它可以同样很好地用于在<strong>输入</strong>端进行改进。在下一章中，我们将使用距离来提高对用户输入的名词的识别。</p><p>输出样例</p><p>Welcome to Little Cave Adventure. You are in an open field. You see: a silver coin a burly guard a cave entrance</p><p>--&gt; go guard You can&#39;t get much closer than this.</p><p>--&gt; give silver You are not holding any silver.</p><p>--&gt; ask silver There appears to be no silver you can get from a burly guard.</p><p>--&gt; get silver You pick up a silver coin.</p><p>--&gt; get gold You don&#39;t see any gold here.</p><p>--&gt; give silver You give a silver coin to a burly guard.</p><p>--&gt; go cave OK. You are in a little cave. You see: a gold coin an exit</p><p>--&gt; get gold You pick up a gold coin.</p><p>--&gt; give gold There is nobody here to give that to.</p><p>--&gt; quit</p><p>Bye!</p>`,70),e=[o];function c(t,r,E,y,i,b){return n(),a("div",null,e)}const d=s(p,[["render",c]]);export{u as __pageData,d as default};
