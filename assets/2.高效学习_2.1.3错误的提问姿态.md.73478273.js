import{_ as p,I as l,o,c as e,x as c,j as s,a,U as t}from"./chunks/framework.489e5108.js";const r="/assets/02.8690e4bd.jpg",i="/assets/01.6becf3f1.jpg",D=JSON.parse('{"title":"2.1.3 错误的提问姿态","description":"","frontmatter":{},"headers":[],"relativePath":"2.高效学习/2.1.3错误的提问姿态.md","filePath":"2.高效学习/2.1.3错误的提问姿态.md","lastUpdated":1696176798000}'),y={name:"2.高效学习/2.1.3错误的提问姿态.md"},E=s("h1",{id:"_2-1-3-错误的提问姿态",tabindex:"-1"},[a("2.1.3 错误的提问姿态 "),s("a",{class:"header-anchor",href:"#_2-1-3-错误的提问姿态","aria-label":'Permalink to "2.1.3 错误的提问姿态"'},"​")],-1),d=s("h2",{id:"现状",tabindex:"-1"},[a("现状 "),s("a",{class:"header-anchor",href:"#现状","aria-label":'Permalink to "现状"'},"​")],-1),m=s("p",null,"我们假定一个情况，如果你是一个医生，患者过来告诉你，我浑身都疼，医生我该怎么办啊。",-1),h=s("p",null,"然后你要慢慢询问他的问题，接着你要问各种问题各种检查然后去看，如果有十个人一百个人都这么问，你肯定会受不了的吧。",-1),_=s("p",null,'事实上，如果希望能提高得到回答的概率，提问者应该学会如何更好地提问。换句话说，提问者应该去积极思考 "我可以主动做些什么来让对方更方便地帮助我诊断问题".',-1),b=s("p",null,"如果你的提问方式非常不专业，很可能没有人愿意关注你的问题，因为这不仅让人觉得你随便提的问题没那么重要，而且大家也不愿意花费大量的时间向你来回地咨询。",-1),u=t('<h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决&quot;">​</a></h2><p>一种非常合适的提问方式是：</p><p>我在写 xxx 的时候遇到了 xxx 的错误（请发截图不要复制粘贴）</p><p>我的版本是 XXX，官方文档给的版本是 XXX</p><p>我做了这个来试着修正（贴图）根据的是 XXX 上的方法</p><p>然后出现了 XXX</p><p>···········</p><p>最后我做的尝试是 XXX</p><p>问题还是没有解决，现在我该怎么做？</p><p><img src="https://cdn.xyxsw.site/boxcnhuhE7qBLHyJKaesHGC033b.png" alt=""></p><h3 id="关于截图" tabindex="-1">关于截图 <a class="header-anchor" href="#关于截图" aria-label="Permalink to &quot;关于截图&quot;">​</a></h3><p>如果你在问问题的时候掏出一张手机拍电脑🤳🖥️的图片，那么大概率会让想要帮助你解决问题的学长血压升高然后放弃回答你的问题。</p><p>除非遇到一些特殊情况（例如你的电脑进 BIOS 了），只能手机拍照，也请保证图片清晰便于识别。</p><p><img src="'+r+'" alt=""></p><p>在 wiki 的<a href="./2.2优雅的使用工具"> 2.2 优雅的使用工具</a>，有推荐一些好用开源的截图工具</p><p>不过一般情况来说，Windows 的组合键 <code>Win+Shift+S</code> 截屏，在任意窗口按下这个组合键便可进入截屏模式，按住鼠标左键拖动框选区域即可截屏，使用 <code>Ctrl+V</code> 操作将截屏内容粘贴到想要保存的地方；如果已经登录了 QQ，那么 QQ 的截图快捷键默认是 <code>Ctrl+Alt+A</code> ，同样使用 <code>Ctrl+V</code> 粘贴截屏内容。</p><p>ps:QQ 有长截图的功能，妈妈再也不用担心我不会滚动捕捉了！</p><p>记住这两个快捷键已经足够满足你对截图的 90% 的需求了</p><h3 id="橡皮鸭" tabindex="-1">橡皮鸭 <a class="header-anchor" href="#橡皮鸭" aria-label="Permalink to &quot;橡皮鸭&quot;">​</a></h3><blockquote><p>来自伯克利大学的学习建议</p></blockquote><p>当遇到问题时，除了截图外，试着组织语言来解释你遇到困难的地方。</p><p><img src="'+i+`" alt=""></p><p><strong>这并不需要一个找到懂得如何解决问题的人 (或者甚至是一个人 —— 这种做法通常被称为橡皮鸭，因为你可以把一只橡皮鸭当作你的练习对象) ，因为主要目标是让你弄清楚你自己的想法，弄清楚你的理解和代码到底在哪里卡住了。这样你可以知道应该专注于哪一部分，以便更好地理解。</strong></p><h3 id="欢迎大家阅读" tabindex="-1">欢迎大家阅读 <a class="header-anchor" href="#欢迎大家阅读" aria-label="Permalink to &quot;欢迎大家阅读&quot;">​</a></h3><p><a href="https://github.com/tangx/Stop-Ask-Questions-The-Stupid-Ways/blob/master/README.md" target="_blank" rel="noreferrer">Stop-Ask-Questions-The-Stupid-Ways</a> 别像弱智一样提问</p><p><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md" target="_blank" rel="noreferrer">How-To-Ask-Questions-The-Smart-Way</a> 提问的智慧</p><h2 id="关于如何搜索代码" tabindex="-1">关于如何搜索代码 <a class="header-anchor" href="#关于如何搜索代码" aria-label="Permalink to &quot;关于如何搜索代码&quot;">​</a></h2><p>如果我现在想要把图片读取并转换成灰度图，我该怎么去搜索呢？</p><p>首先，我打算使用 python，所以我会搜索：“python 图片转灰度图”</p><p>以下是我从搜索到的博客中找到的代码：</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> cv2 </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> cv</span></span>
<span class="line"><span style="color:#E1E4E8;">img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cv.imread(</span><span style="color:#9ECBFF;">&#39;lbxx.jpg&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">img_1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cv.cvtColor(img,cv.</span><span style="color:#79B8FF;">COLOR_BGR2GRAY</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">cv.imshow(</span><span style="color:#9ECBFF;">&#39;gray&#39;</span><span style="color:#E1E4E8;">,img_1)</span></span>
<span class="line"><span style="color:#E1E4E8;">cv.imshow(</span><span style="color:#9ECBFF;">&#39;colour&#39;</span><span style="color:#E1E4E8;">,img)</span></span>
<span class="line"><span style="color:#E1E4E8;">cv.waitKey(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> cv2 </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> cv</span></span>
<span class="line"><span style="color:#24292E;">img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cv.imread(</span><span style="color:#032F62;">&#39;lbxx.jpg&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">img_1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cv.cvtColor(img,cv.</span><span style="color:#005CC5;">COLOR_BGR2GRAY</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">cv.imshow(</span><span style="color:#032F62;">&#39;gray&#39;</span><span style="color:#24292E;">,img_1)</span></span>
<span class="line"><span style="color:#24292E;">cv.imshow(</span><span style="color:#032F62;">&#39;colour&#39;</span><span style="color:#24292E;">,img)</span></span>
<span class="line"><span style="color:#24292E;">cv.waitKey(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>接下来，我会去搜索每行代码的作用：（以下是搜索后我做的注释）</p><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> cv2 </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> cv </span><span style="color:#6A737D;"># 调 opencv 库</span></span>
<span class="line"><span style="color:#E1E4E8;">img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cv.imread(</span><span style="color:#9ECBFF;">&#39;lbxx.jpg&#39;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;"># 读取图片（“图片路径”）</span></span>
<span class="line"><span style="color:#E1E4E8;">img_1 </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> cv.cvtColor(img,cv.</span><span style="color:#79B8FF;">COLOR_BGR2GRAY</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;"># 转换成灰度图（图片，颜色模式）</span></span>
<span class="line"><span style="color:#E1E4E8;">cv.imshow(</span><span style="color:#9ECBFF;">&#39;gray&#39;</span><span style="color:#E1E4E8;">,img_1) </span><span style="color:#6A737D;"># 展示图片（展示 img_1 为灰度图）</span></span>
<span class="line"><span style="color:#E1E4E8;">cv.imshow(</span><span style="color:#9ECBFF;">&#39;colour&#39;</span><span style="color:#E1E4E8;">,img) </span><span style="color:#6A737D;"># 展示图片（展示 img 为彩色图）</span></span>
<span class="line"><span style="color:#E1E4E8;">cv.waitKey(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;"># 保存展示窗口打开</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> cv2 </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> cv </span><span style="color:#6A737D;"># 调 opencv 库</span></span>
<span class="line"><span style="color:#24292E;">img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cv.imread(</span><span style="color:#032F62;">&#39;lbxx.jpg&#39;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># 读取图片（“图片路径”）</span></span>
<span class="line"><span style="color:#24292E;">img_1 </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> cv.cvtColor(img,cv.</span><span style="color:#005CC5;">COLOR_BGR2GRAY</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># 转换成灰度图（图片，颜色模式）</span></span>
<span class="line"><span style="color:#24292E;">cv.imshow(</span><span style="color:#032F62;">&#39;gray&#39;</span><span style="color:#24292E;">,img_1) </span><span style="color:#6A737D;"># 展示图片（展示 img_1 为灰度图）</span></span>
<span class="line"><span style="color:#24292E;">cv.imshow(</span><span style="color:#032F62;">&#39;colour&#39;</span><span style="color:#24292E;">,img) </span><span style="color:#6A737D;"># 展示图片（展示 img 为彩色图）</span></span>
<span class="line"><span style="color:#24292E;">cv.waitKey(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#6A737D;"># 保存展示窗口打开</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>于是，我就不仅学会了如何转换灰度图，还学会了相关函数的用法。</p>`,34);function g(v,C,F,A,x,k){const n=l("Bilibili");return o(),e("div",null,[E,d,m,h,_,b,c(n,{bvid:"BV1om4y1H71S"}),u])}const f=p(y,[["render",g]]);export{D as __pageData,f as default};
