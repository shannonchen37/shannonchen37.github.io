import{_ as e,o as Q,c as n,a as s,j as a,U as t}from"./chunks/framework.489e5108.js";const m1=JSON.parse('{"title":"DeepFM","description":"","frontmatter":{},"headers":[],"relativePath":"4.人工智能/ch02/ch2.2/ch2.2.3/DeepFM.md","filePath":"4.人工智能/ch02/ch2.2/ch2.2.3/DeepFM.md","lastUpdated":1696176798000}'),l={name:"4.人工智能/ch02/ch2.2/ch2.2.3/DeepFM.md"},T=t("",10),o=a("ul",null,[a("li",null,[a("strong",null,"FNN 和 PNN"),s(" 结合 FM 和 DNN 其实有两种方式，可以并行结合也可以串行结合。这两种方式各有几种代表模型。在 DeepFM 之前有 FNN，虽然在影响力上可能并不如 DeepFM，但是了解 FNN 的思想对我们理解 DeepFM 的特点和优点是很有帮助的。")])],-1),r=a("div",{align:"center"},[a("img",{src:"https://ryluo.oss-cn-chengdu.aliyuncs.com/图片2021-02-22-10-12-19.png",style:{zoom:"50%"}})],-1),p=a("p",null,"FNN 是使用预训练好的 FM 模块，得到隐向量，然后把隐向量作为 DNN 的输入，但是经过实验进一步发现，在 Embedding layer 和 hidden layer1 之间增加一个 product 层（如上图所示）可以提高模型的表现，所以提出了 PNN，使用 product layer 替换 FM 预训练层。",-1),d=a("ul",null,[a("li",null,[a("strong",null,"Wide&Deep"),s(" FNN 和 PNN 模型仍然有一个比较明显的尚未解决的缺点：对于低阶组合特征学习到的比较少，这一点主要是由于 FM 和 DNN 的串行方式导致的，也就是虽然 FM 学到了低阶特征组合，但是 DNN 的全连接结构导致低阶特征并不能在 DNN 的输出端较好的表现。看来我们已经找到问题了，将串行方式改进为并行方式能比较好的解决这个问题。于是 Google 提出了 Wide&Deep 模型（将前几章），但是如果深入探究 Wide&Deep 的构成方式，虽然将整个模型的结构调整为了并行结构，在实际的使用中 Wide Module 中的部分需要较为精巧的特征工程，换句话说人工处理对于模型的效果具有比较大的影响（这一点可以在 Wide&Deep 模型部分得到验证）。")])],-1),m=a("div",{align:"center"},[a("img",{src:"https://ryluo.oss-cn-chengdu.aliyuncs.com/Javaimage-20200910214310877.png",alt:"image-20200910214310877",style:{zoom:"65%"}})],-1),i=t("",8),c={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},h={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-3.014ex"},xmlns:"http://www.w3.org/2000/svg",width:"43.476ex",height:"6.935ex",role:"img",focusable:"false",viewBox:"0 -1733 19216.2 3065.1","aria-hidden":"true"},g=t("",1),u=[g],y=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("msub",null,[a("mrow",{"data-mjx-texclass":"ORD"},[a("mover",null,[a("mi",null,"y"),a("mo",{stretchy:"false"},"^")])]),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"F"),a("mi",null,"M")])]),a("mo",{stretchy:"false"},"("),a("mi",null,"x"),a("mo",{stretchy:"false"},")"),a("mo",null,"="),a("msub",null,[a("mi",null,"w"),a("mn",null,"0")]),a("mo",null,"+"),a("munderover",null,[a("mo",{"data-mjx-texclass":"OP"},"∑"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"i"),a("mo",null,"="),a("mn",null,"1")]),a("mi",null,"N")]),a("msub",null,[a("mi",null,"w"),a("mi",null,"i")]),a("msub",null,[a("mi",null,"x"),a("mi",null,"i")]),a("mo",null,"+"),a("munderover",null,[a("mo",{"data-mjx-texclass":"OP"},"∑"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"i"),a("mo",null,"="),a("mn",null,"1")]),a("mi",null,"N")]),a("munderover",null,[a("mo",{"data-mjx-texclass":"OP"},"∑"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"j"),a("mo",null,"="),a("mi",null,"i"),a("mo",null,"+"),a("mn",null,"1")]),a("mi",null,"N")]),a("msubsup",null,[a("mi",null,"v"),a("mi",null,"i"),a("mi",null,"T")]),a("msub",null,[a("mi",null,"v"),a("mi",null,"j")]),a("msub",null,[a("mi",null,"x"),a("mi",null,"i")]),a("msub",null,[a("mi",null,"x"),a("mi",null,"j")])])],-1),_=a("div",{align:"center"},[a("img",{src:"https://ryluo.oss-cn-chengdu.aliyuncs.com/图片image-20210225181340313.png",alt:"image-20210225181340313",style:{zoom:"67%"}})],-1),H=a("div",{align:"center"},[a("img",{src:"https://ryluo.oss-cn-chengdu.aliyuncs.com/图片image-20210225181010107.png",alt:"image-20210225181010107",style:{zoom:"50%"}})],-1),w={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},b={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.357ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.837ex",height:"1.359ex",role:"img",focusable:"false",viewBox:"0 -443 812 600.8","aria-hidden":"true"},E=t("",1),f=[E],x=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("msub",null,[a("mi",null,"v"),a("mi",null,"i")])])],-1),L={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},M={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"19.211ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 8491.1 1000","aria-hidden":"true"},D=t("",1),k=[D],V=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("msub",null,[a("mi",null,"z"),a("mn",null,"1")]),a("mo",null,"="),a("mo",{stretchy:"false"},"["),a("msub",null,[a("mi",null,"v"),a("mn",null,"1")]),a("mo",null,","),a("msub",null,[a("mi",null,"v"),a("mn",null,"2")]),a("mo",null,","),a("mo",null,"."),a("mo",null,"."),a("mo",null,"."),a("mo",null,","),a("msub",null,[a("mi",null,"v"),a("mi",null,"m")]),a("mo",{stretchy:"false"},"]")])],-1),Z=a("p",null,"上一层的输出作为下一层的输入，我们得到：",-1),F={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},v={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"25.288ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 11177.2 1000","aria-hidden":"true"},A=t("",1),N=[A],C=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("msub",null,[a("mi",null,"z"),a("mi",null,"L")]),a("mo",null,"="),a("mi",null,"σ"),a("mo",{stretchy:"false"},"("),a("msub",null,[a("mi",null,"W"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"L"),a("mo",null,"−"),a("mn",null,"1")])]),a("msub",null,[a("mi",null,"z"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"L"),a("mo",null,"−"),a("mn",null,"1")])]),a("mo",null,"+"),a("msub",null,[a("mi",null,"b"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"L"),a("mo",null,"−"),a("mn",null,"1")])]),a("mo",{stretchy:"false"},")")])],-1),j={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},S={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.292ex",height:"1ex",role:"img",focusable:"false",viewBox:"0 -431 571 442","aria-hidden":"true"},P=a("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[a("g",{"data-mml-node":"math"},[a("g",{"data-mml-node":"mi"},[a("path",{"data-c":"1D70E",d:"M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z",style:{"stroke-width":"3"}})])])],-1),R=[P],B=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mi",null,"σ")])],-1),I=a("p",null,"最后进入 DNN 部分输出使用 sigmod 激活函数进行激活：",-1),O={class:"MathJax",jax:"SVG",display:"true",style:{direction:"ltr",display:"block","text-align":"center",margin:"1em 0",position:"relative"}},z={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"22.792ex",height:"2.593ex",role:"img",focusable:"false",viewBox:"0 -896 10074.1 1146","aria-hidden":"true"},q=t("",1),G=[q],X=a("mjx-assistive-mml",{unselectable:"on",display:"block",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",overflow:"hidden",width:"100%"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[a("msub",null,[a("mi",null,"y"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"D"),a("mi",null,"N"),a("mi",null,"N")])]),a("mo",null,"="),a("mi",null,"σ"),a("mo",{stretchy:"false"},"("),a("msup",null,[a("mi",null,"W"),a("mrow",{"data-mjx-texclass":"ORD"},[a("mi",null,"L")])]),a("msup",null,[a("mi",null,"a"),a("mi",null,"L")]),a("mo",null,"+"),a("msup",null,[a("mi",null,"b"),a("mi",null,"L")]),a("mo",{stretchy:"false"},")")])],-1),J=a("h2",{id:"代码实现",tabindex:"-1"},[s("代码实现 "),a("a",{class:"header-anchor",href:"#代码实现","aria-label":'Permalink to "代码实现"'},"​")],-1),W=a("p",null,"DeepFM 在模型的结构图中显示，模型大致由两部分组成，一部分是 FM，还有一部分就是 DNN, 而 FM 又由一阶特征部分与二阶特征交叉部分组成，所以可以将整个模型拆成三部分，分别是一阶特征处理 linear 部分，二阶特征交叉 FM 以及 DNN 的高阶特征交叉。在下面的代码中也能够清晰的看到这个结构。此外每一部分可能由是由不同的特征组成，所以在构建模型的时候需要分别对这三部分输入的特征进行选择。",-1),$={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},U={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"25.125ex",height:"1.756ex",role:"img",focusable:"false",viewBox:"0 -694 11105.2 776","aria-hidden":"true"},K=t("",1),Y=[K],a1=a("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[a("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[a("mi",null,"w"),a("mn",null,"1"),a("mi",null,"x"),a("mn",null,"1"),a("mo",null,"+"),a("mi",null,"w"),a("mn",null,"2"),a("mi",null,"x"),a("mn",null,"2."),a("mo",null,"."),a("mo",null,"."),a("mi",null,"w"),a("mi",null,"n"),a("mi",null,"x"),a("mi",null,"n"),a("mo",null,"+"),a("mi",null,"b")])],-1),s1=a("li",null,"fm_logits: 这一块主要是针对离散的特征，首先过 embedding，然后使用 FM 特征交叉的方式，两两特征进行交叉，得到新的特征向量，最后计算交叉特征的 logits",-1),t1=a("li",null,"dnn_logits: 这一块主要是针对离散的特征，首先过 embedding，然后将得到的 embedding 拼接成一个向量 (具体的可以看代码，也可以看一下下面的模型结构图)，通过 dnn 学习类别特征之间的隐式特征交叉并输出 logits 值",-1),Q1=t("",10);function n1(e1,l1,T1,o1,r1,p1){return Q(),n("div",null,[T,s(" 但是仍然缺少低阶的特征组合，于是增加FM来表示低阶的特征组合。 "),o,r,p,d,m,s(" 如上图所示，该模型仍然存在问题：**在output Units阶段直接将低阶和高阶特征进行组合，很容易让模型最终偏向学习到低阶或者高阶的特征，而不能做到很好的结合。** "),i,a("mjx-container",c,[(Q(),n("svg",h,u)),y]),_,s(" ### Deep Deep架构图 "),H,s(" Deep Module是为了学习高阶的特征组合，在上图中使用用全连接的方式将Dense Embedding输入到Hidden Layer，这里面Dense Embeddings就是为了解决DNN中的参数爆炸问题，这也是推荐模型中常用的处理方法。 "),a("p",null,[s("Embedding 层的输出是将所有 id 类特征对应的 embedding 向量 concat 到到一起输入到 DNN 中。其中"),a("mjx-container",w,[(Q(),n("svg",b,f)),x]),s(" 表示第 i 个 field 的 embedding，m 是 field 的数量。")]),a("mjx-container",L,[(Q(),n("svg",M,k)),V]),Z,a("mjx-container",F,[(Q(),n("svg",v,N)),C]),a("p",null,[s("其中"),a("mjx-container",j,[(Q(),n("svg",S,R)),B]),s(" 表示激活函数，$z, W, b $ 分别表示该层的输入、权重和偏置。")]),I,a("mjx-container",O,[(Q(),n("svg",z,G)),X]),J,W,a("ul",null,[a("li",null,[s("linear_logits: 这部分是有关于线性计算，也就是 FM 的前半部分"),a("mjx-container",$,[(Q(),n("svg",U,Y)),a1]),s(" 的计算。对于这一块的计算，我们用了一个 get_linear_logits 函数实现，后面再说，总之通过这个函数，我们就可以实现上面这个公式的计算过程，得到 linear 的输出， 这部分特征由数值特征和类别特征的 onehot 编码组成的一维向量组成，实际应用中根据自己的业务放置不同的一阶特征 (这里的 dense 特征并不是必须的，有可能会将数值特征进行分桶，然后在当做类别特征来处理)")]),s1,t1]),Q1])}const i1=e(l,[["render",n1]]);export{m1 as __pageData,i1 as default};
