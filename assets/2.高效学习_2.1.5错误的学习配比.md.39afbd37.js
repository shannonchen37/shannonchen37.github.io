import{_ as t,o as e,c as _,U as a}from"./chunks/framework.489e5108.js";const f=JSON.parse('{"title":"2.1.5 错误的学习配比","description":"","frontmatter":{},"headers":[],"relativePath":"2.高效学习/2.1.5错误的学习配比.md","filePath":"2.高效学习/2.1.5错误的学习配比.md","lastUpdated":1696176798000}'),p={name:"2.高效学习/2.1.5错误的学习配比.md"},s=a('<h1 id="_2-1-5-错误的学习配比" tabindex="-1">2.1.5 错误的学习配比 <a class="header-anchor" href="#_2-1-5-错误的学习配比" aria-label="Permalink to &quot;2.1.5 错误的学习配比&quot;">​</a></h1><p>在学计算机科学的时候，总有人会问一些问题，类似于 “我需要把这本书看完然后再开始 blabla 吗”</p><p>” 我需要看完某些课程然后再开始吗 “</p><p>其实这种想法是完全错误的。</p><p>在高中阶段，你可能需要先阅览课本，然后再做题，可计算机是一门实践学科，你是用这样的方法无疑是一个低效的行为。</p><p>我们推荐正确的操作是一边实践一边学习，如果你有什么不会的内容，再去额外查询，但是不要全陷进去，开始无限套娃模式的搜索。</p><p>你可以先阅览一小部分内容，有个大致的了解后再逐渐深入，并且最好是一边敲代码一边实践一边去做。</p><p>同时也有些同学可能犯的错误是我只看看我不写代码。</p><p>这也同样会让你飞速的忘记代码，或者说有的同学可能想偷懒，某些行代码他没看懂就跳过去了，其实这也是有问题的，因为你所有埋下的坑，可能都会在以后的实践中填回来。</p><p>在你完成这份讲义的时候，希望你可以有选择的阅览一部分，然后带着问题去看某些课，效率也会高很多。</p><p><img src="https://cdn.xyxsw.site/boxcnSq1JzWhVrFs3MePPzp5Txg.jpg" alt=""></p>',11),o=[s];function r(c,n,d,i,l,h){return e(),_("div",null,o)}const x=t(p,[["render",r]]);export{f as __pageData,x as default};
