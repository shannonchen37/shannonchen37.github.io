import{_ as t,I as o,o as i,c as s,x as n,U as a}from"./chunks/framework.489e5108.js";const g=JSON.parse('{"title":"用什么写 C 语言","description":"","frontmatter":{},"headers":[],"relativePath":"3.编程思维体系构建/3.4.2用什么写 C 语言.md","filePath":"3.编程思维体系构建/3.4.2用什么写 C 语言.md","lastUpdated":1696176798000}'),r={name:"3.编程思维体系构建/3.4.2用什么写 C 语言.md"},c=a('<h1 id="用什么写-c-语言" tabindex="-1">用什么写 C 语言 <a class="header-anchor" href="#用什么写-c-语言" aria-label="Permalink to &quot;用什么写 C 语言&quot;">​</a></h1><p>初学 C 语言，第一个问题莫过于用什么软件编写 C 语言程序。学校的老师可能会推荐包括但不限于 VC6.0，CodeBlocks，devC++，Visual Studio2013 等，如果你的电脑不是老年机，那么以上软件衷心建议你不要去使用，过于老旧了。</p><h2 id="windows-visual-studio" tabindex="-1">Windows-Visual Studio <a class="header-anchor" href="#windows-visual-studio" aria-label="Permalink to &quot;Windows-Visual Studio&quot;">​</a></h2><p><a href="https://www.bilibili.com/video/BV1Xt411g7jT" target="_blank" rel="noreferrer">vs2022 (Visual Studio 2022) 指南 &amp;&amp; 技巧要领</a></p>',4),p=a('<p>Visual Studio（以下简称 VS）是 Windows 下最完美的 C/C++ 等语言的开发平台，有 “宇宙第一 IDE” 之称，功能丰富，开箱即用。目前更新到 2022 版。</p><p>什么是 IDE，什么是代码编辑器，什么是编译器等等细碎问题参考文档 <a href="./3.1该使用哪个编辑器？？？">3.1 该使用哪个编辑器？？？</a> 看不懂的话直接无脑装</p><h3 id="下载" tabindex="-1"><strong>下载</strong> <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;**下载**&quot;">​</a></h3><p><a href="https://visualstudio.microsoft.com/zh-hans/downloads/" target="_blank" rel="noreferrer">https://visualstudio.microsoft.com/zh-hans/downloads/</a></p><p>选择社区版</p><p><img src="https://cdn.xyxsw.site/boxcnhNeAnlrbcdJciMUY9oNTuc.png" alt=""></p><p>社区版和专业版等的区别：社区版免费，功能上几乎无差别</p><h3 id="vs-安装" tabindex="-1">VS 安装 <a class="header-anchor" href="#vs-安装" aria-label="Permalink to &quot;VS 安装&quot;">​</a></h3><p>选择 C++ 桌面开发，其他不用选，有需要了再说。另外，Python 开发不好使，不要像我一样选 Python 开发。</p><p><img src="https://cdn.xyxsw.site/boxcnkjmKcCxIgRIzA5kyUZckye.png" alt=""></p><p>安装完成后，一般来说 VS 不会自动创建桌面快捷方式，你需要到开始菜单中启动 VS。</p><p>请勿使用鼠标右键中的 “在 VS 中打开” 来打开 VS</p><p>首次打开应该会让你选择开发环境和主题，建议开发环境选择 C++ ，主题根据个人喜好选择。</p><h3 id="创建项目" tabindex="-1">创建项目 <a class="header-anchor" href="#创建项目" aria-label="Permalink to &quot;创建项目&quot;">​</a></h3><p>VS 是项目制，你需要创建一个项目才能开始编写代码并运行。</p><p>打开 VS，会打开如下界面（我使用深色主题），在此处单击 “创建新项目”</p><p><img src="https://cdn.xyxsw.site/boxcn6MgNnY2qBd1yAudeirx6Sh.png" alt=""></p><p>在创建新项目页面中选择项目模板为控制台应用（空项目亦可，后续手动添加.c 源文件），并单击下一步</p><p><img src="https://cdn.xyxsw.site/boxcnFwZpWZ3fQkdd3mCO8Mr9Wj.png" alt=""></p><p>为你的项目起一个名字，以及选择项目的位置，一般默认即可，如果你有强迫症，C 盘一定不能放个人数据，请自行修改。完成后单击 “创建”</p><p><img src="https://cdn.xyxsw.site/boxcnkxd472wIT39DbEiBsyPWzf.png" alt=""></p><p>自此就创建了一个项目了，你将会到达如下界面：</p><p><img src="https://cdn.xyxsw.site/boxcnvOGdjKLnvXvJM7nlE8yVcb.png" alt=""></p><p>其中，左侧（如果在一开始没有选择 C++ 开发环境的话可能在右侧）为资源管理器，列出了本项目所用到的所有文件，包括代码（外部依赖项、源文件、头文件），以及将来开发图形化界面所需的资源文件；最中间占据面积最多的是代码编辑器窗口，你以后将会在这里编写你的 C 语言代码。最下面是输出窗口，源代码进行编译时，会在此处给出编译进度以及可能的代码中的错误。</p><p>请仔细阅读注释（绿色）中的各项内容，这很重要。</p><p>阅读完以后，就可以将代码全部删去，编写自己的代码了。</p><p>注意控制台项目初始源文件后缀为.cpp 为 C++ 文件，如果编写 C 语言<strong>建议将后缀改为.c</strong>。.cpp 存在隐患：如果不小心使用了 C++ 的语法而非 C 存在的语法，编译器并不会报错，且 C 与 C++ 在某些特性存在区别。</p><h3 id="运行-你的-c-语言代码" tabindex="-1">“运行” 你的 C 语言代码 <a class="header-anchor" href="#运行-你的-c-语言代码" aria-label="Permalink to &quot;“运行”你的 C 语言代码&quot;">​</a></h3><p>C 语言是编译型语言，因此说 “运行” 代码其实并不是十分合适，不过我们初学，不用过分抠字眼，知道什么意思即可。</p><p>当你编写完自己的代码后，即可单击 “本地 Windows 调试器”（或者使用快捷键 F5）进行 “运行”。</p><p><img src="https://cdn.xyxsw.site/boxcnhTxhUYMHeYHdrq0zWzLomb.png" alt=""></p><p>你可能会发现在 “本地 Windows 调试器” 右侧还有一个绿色三角形，并且单击这个也可以 “运行”，这两个的区别在于 “本地 Windows 调试器” 是调试运行，右侧那个是不调试直接运行。</p><h3 id="scanf-报错" tabindex="-1">scanf 报错 <a class="header-anchor" href="#scanf-报错" aria-label="Permalink to &quot;scanf 报错&quot;">​</a></h3><p>如果你的代码被 VS 提示 “This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.”</p><p><img src="https://cdn.xyxsw.site/boxcnfrxYjk5CCjMfY0mLK1B1Ze.png" alt=""></p><p>需要你在项目 - xxx 属性（xxx 是你的项目名）-C/C++- 代码生成 - 安全检查里将安全检查禁用</p><p><img src="https://cdn.xyxsw.site/boxcniHhCIUQY0oB3ALlxqgciLd.png" alt=""></p><h3 id="调试" tabindex="-1">调试 <a class="header-anchor" href="#调试" aria-label="Permalink to &quot;调试&quot;">​</a></h3><p>IDE 相比于代码编辑器，最强大的一点莫过于成熟的调试系统。通过调试，可以快速定位代码中没有被编译器检查出来的逻辑错误。如果需要调试，则可以在这个位置单击，打下断点，并且运行程序，程序运行时，就会在此处暂停下来，暂停时就可以查看各个变量的值了。</p><p><img src="https://cdn.xyxsw.site/boxcnydHyaNPqUEVVWmbdGofX0d.png" alt=""></p><h3 id="深色主题" tabindex="-1"><strong>深色主题</strong> <a class="header-anchor" href="#深色主题" aria-label="Permalink to &quot;**深色主题**&quot;">​</a></h3><p>需要深色主题请在工具 - 主题里更改为深色</p><h3 id="tips" tabindex="-1">Tips <a class="header-anchor" href="#tips" aria-label="Permalink to &quot;Tips&quot;">​</a></h3><h4 id="仔细查看报错" tabindex="-1">仔细查看报错 <a class="header-anchor" href="#仔细查看报错" aria-label="Permalink to &quot;仔细查看报错&quot;">​</a></h4><p><img src="https://cdn.xyxsw.site/boxcnC6TAAdtS0P5HzebFgFn2lc.png" alt=""></p><p>如果程序代码中出现红色波浪线，则表示该处代码有 “错误”，并且该处的错误会同步显示在下面的这个位置，单击即可看到错误详情。如果代码中出现绿色波浪线，则表示该处代码中有警告。警告和错误的区别是警告可以通过编译运行，但编译器认为你这里可能写错了；错误是完全不可以通过编译。</p><p><img src="https://cdn.xyxsw.site/boxcn7zL0QFakVTpYBdpOmmWOvc.png" alt=""></p><h4 id="善用提示" tabindex="-1">善用提示 <a class="header-anchor" href="#善用提示" aria-label="Permalink to &quot;善用提示&quot;">​</a></h4><p><img src="https://cdn.xyxsw.site/boxcn2ouk043lNQEUkVkIS7bSSd.png" alt=""></p><p>当你打一些函数名或者关键字时，VS 会给出你语法提示，如果这个提示正确，按下 Tab 键即可将这个提示补全到你的代码里；或者你也可以跟着这个提示打一遍，防止打错关键字。</p><h3 id="vs-的缺点" tabindex="-1">VS 的缺点 <a class="header-anchor" href="#vs-的缺点" aria-label="Permalink to &quot;VS 的缺点&quot;">​</a></h3><p>过于庞大，很多功能对于初学者来说用不上，对电脑的性能也有略微的要求，但瑕不掩瑜，他的开箱即用的使用体验还是很不错的。</p><h2 id="windows-visual-studio-code" tabindex="-1">Windows-Visual Studio Code <a class="header-anchor" href="#windows-visual-studio-code" aria-label="Permalink to &quot;Windows-Visual Studio Code&quot;">​</a></h2><p>Visual Studio Code（以下简称 vscode）和 Visual Studio 都是微软开发的软件，区别在于 Visual Studio Code 是一个比较轻量的代码编辑器，在没有经过配置的情况下一般只能编写和查看代码，而不能运行，并且 Visual Studio Code 跨平台，在安装了丰富的插件后体验不输于一众 IDE。</p><blockquote><p>NX 的留言： 鄙人认为 C 的初学者应该使用 VSCode 更佳，环境准备可见鄙人博客 <a href="https://nickxu.me/2021/12/31/cc-vscode-huan-jing-pei-zhi/" target="_blank" rel="noreferrer">『C/C++』VScode 环境配置</a></p></blockquote><h3 id="vscode-安装" tabindex="-1">vscode 安装 <a class="header-anchor" href="#vscode-安装" aria-label="Permalink to &quot;vscode 安装&quot;">​</a></h3><h4 id="安装软件本体" tabindex="-1">安装软件本体 <a class="header-anchor" href="#安装软件本体" aria-label="Permalink to &quot;安装软件本体&quot;">​</a></h4><p><a href="https://code.visualstudio.com/" target="_blank" rel="noreferrer">https://code.visualstudio.com/</a></p><p>在该网站进行下载，并安装，安装完成并打开后可以根据右下角的提示来修改显示语言等</p><h4 id="安装编译器" tabindex="-1">安装编译器 <a class="header-anchor" href="#安装编译器" aria-label="Permalink to &quot;安装编译器&quot;">​</a></h4><p>如果你电脑上下载有 VS，那么安装编译器这一环节可以省略。如果电脑上没有 VS，则需要安装 VS，或者下载其他 C 语言编译器，如 gcc，clang，icc 等</p><h3 id="创建-项目" tabindex="-1">创建 “项目” <a class="header-anchor" href="#创建-项目" aria-label="Permalink to &quot;创建“项目”&quot;">​</a></h3><p>vscode 的项目和 VS 不同，vscode 的项目比较松散，并没有 VS 那样是一套非常完善的项目系统。</p><p>首先需要一个空文件夹，并在 vscode 里打开这个文件夹。然后点击文件 - 新建文本文件，并选择语言为 C 语言。此时如果你是第一次创建 C 语言文件，那么右下角会弹出提示，提示你安装 C/C++ 插件，安装即可。</p><h3 id="编写代码并运行" tabindex="-1">编写代码并运行 <a class="header-anchor" href="#编写代码并运行" aria-label="Permalink to &quot;编写代码并运行&quot;">​</a></h3><p>编写完代码后，保存文件，并点击运行 - 启动调试</p><p><img src="https://cdn.xyxsw.site/boxcnim98FJybpkGl8sfqxP9v9b.png" alt=""></p><p>此时会弹出如下选择框，我的电脑上同时安装有 VS 和 gcc 编译器，因此有两个，大部分的电脑上应该只有一个 “C++ (Windows)”，选择你电脑上的编译器并运行即可。</p><p>至此就已经完成了编程和调试的基本功能。如果你想要更丰富的功能，比如多文件编译等等，可以自行去网上搜索相关的配置教程。vscode 配置好了是非常好用的，但缺点就在于配置比较麻烦。</p><h2 id="windows-clion" tabindex="-1">Windows-CLion <a class="header-anchor" href="#windows-clion" aria-label="Permalink to &quot;Windows-CLion&quot;">​</a></h2><p>CLion 是 jetbrains 家族的 C 语言 IDE</p><p><a href="https://www.jetbrains.com/clion/" target="_blank" rel="noreferrer">https://www.jetbrains.com/clion/</a></p><p>收费软件，但可以从 GitHub 学生包里白嫖，喜欢折腾或者喜欢 jetbrains 家族软件风格的可以自己去折腾折腾。</p><h2 id="mac-os-visual-studio-code" tabindex="-1">Mac OS-Visual Studio Code <a class="header-anchor" href="#mac-os-visual-studio-code" aria-label="Permalink to &quot;Mac OS-Visual Studio Code&quot;">​</a></h2><p>用法和 Windows 的差不多，但由于 Mac OS 自带 clang 编译器，所以无需额外安装编译器。</p><blockquote><p>NX 的留言： 使用自带的 clang 的确没问题，但是如果你想在 macOS 上使用 gcc/g++ ，<a href="https://nickxu.me/2023/04/04/%E5%9C%A8Mac%E7%9A%84VSCode%E4%B8%AD%E4%BD%BF%E7%94%A8g-%E7%BC%96%E8%AF%91%E5%99%A8" target="_blank" rel="noreferrer">可参考鄙人的博客 在 Mac 的 VSC 中使用 g++ 编译器</a></p></blockquote><h2 id="mac-os-clion" tabindex="-1">Mac OS-CLion <a class="header-anchor" href="#mac-os-clion" aria-label="Permalink to &quot;Mac OS-CLion&quot;">​</a></h2><p>同样和 Windows 的差不多。</p><h2 id="mac-os-xcode" tabindex="-1">Mac OS-Xcode <a class="header-anchor" href="#mac-os-xcode" aria-label="Permalink to &quot;Mac OS-Xcode&quot;">​</a></h2><p>XCode 是 mac 官方的 IDE，能编写所有 mac 家族设备的软件。但缺点是没有中文。</p><p><img src="https://cdn.xyxsw.site/boxcn05Ca6Wu5TxFMplZCw2N8Jb.png" alt=""></p><p>打开以后选择 Create a new Xcode project，选择 macOS-Command Line Tool</p><p><img src="https://cdn.xyxsw.site/boxcnbnrVCmNGfriHhU5pL76gsd.png" alt=""></p><p><img src="https://cdn.xyxsw.site/boxcnnjaObP5JzpICUx1PMO9MQg.png" alt=""></p><p>两个空里第一个填项目名，第二个随便填就行</p><p>next 后选择项目保存的位置，之后即可到达以下界面：</p><p><img src="https://cdn.xyxsw.site/boxcnl06p0ZS8SSQsWJNLQLYIjc.png" alt=""></p><p>点左上方小三角即可运行</p><p>在行号上点击并运行即可调试</p><p><img src="https://cdn.xyxsw.site/boxcnmRygjmZfwFzODP2N6bVoEh.png" alt=""></p><h2 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h2><h3 id="你都用-linux-了你还来问我-一边玩去" tabindex="-1">你都用 Linux 了你还来问我？一边玩去 <a class="header-anchor" href="#你都用-linux-了你还来问我-一边玩去" aria-label="Permalink to &quot;你都用 Linux 了你还来问我？一边玩去&quot;">​</a></h3>',92);function d(l,h,u,x,b,m){const e=o("Bilibili");return i(),s("div",null,[c,n(e,{bvid:"BV1Xt411g7jT"}),p])}const f=t(r,[["render",d]]);export{g as __pageData,f as default};
