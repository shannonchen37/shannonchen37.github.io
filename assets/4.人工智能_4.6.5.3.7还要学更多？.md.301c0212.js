import{_ as e,o as a,c as t,U as r}from"./chunks/framework.489e5108.js";const f=JSON.parse('{"title":"还要学更多？","description":"","frontmatter":{},"headers":[],"relativePath":"4.人工智能/4.6.5.3.7还要学更多？.md","filePath":"4.人工智能/4.6.5.3.7还要学更多？.md","lastUpdated":1696176798000}'),o={name:"4.人工智能/4.6.5.3.7还要学更多？.md"},i=r('<h1 id="还要学更多" tabindex="-1">还要学更多？ <a class="header-anchor" href="#还要学更多" aria-label="Permalink to &quot;还要学更多？&quot;">​</a></h1><h1 id="try-it-yourself" tabindex="-1">Try it yourself！ <a class="header-anchor" href="#try-it-yourself" aria-label="Permalink to &quot;Try it yourself！&quot;">​</a></h1><p>你已经基本了解现代 CV 的理论架构了，你可以尝试写一些自己的网络来锻炼你的 coding 能力并且切身体会这些技术的效果</p><ul><li>你可以先行尝试一下怎么把在 MNIST 上训练的网络真正投入应用，比如识别一张你自己用黑笔写的数字～</li></ul><p><img src="https://cdn.xyxsw.site/boxcn2juA3J3ycnHoN5SmYAfEfd.jpg" alt=""></p><ul><li>比如你可以尝试训练一个网络来实现人体五官分割（笔者之前就玩过这个）数据集采用 <a href="https://pages.cs.wisc.edu/~lizhang/projects/face-parsing/" target="_blank" rel="noreferrer">helen 数据集</a>，关于数据集的架构你可以搜一搜，自己设计一个 Dataloader 和 YourModle 来实现前言中的五官分割效果（真的很有乐子 hhh）</li></ul><p><img src="https://cdn.xyxsw.site/boxcnJJlzanhvtE55Q7d0IR1vph.png" alt=""></p><ul><li>当然你也可以尝试一些自己感兴趣的小任务来锻炼工程能力～</li></ul><h1 id="reading-more" tabindex="-1">Reading more！ <a class="header-anchor" href="#reading-more" aria-label="Permalink to &quot;Reading more！&quot;">​</a></h1><p>阅读更多的经典论文！当然如果你有更为具体的方向，你可以从该论文的开山之作慢慢学习</p>',10),l=[i];function s(n,_,c,d,h,p){return a(),t("div",null,l)}const m=e(o,[["render",s]]);export{f as __pageData,m as default};
