import{_ as s,o as n,c as a,U as l}from"./chunks/framework.489e5108.js";const b=JSON.parse('{"title":"15.赋予明暗","description":"","frontmatter":{},"headers":[],"relativePath":"3.编程思维体系构建/3.4.6.15.赋予明暗.md","filePath":"3.编程思维体系构建/3.4.6.15.赋予明暗.md","lastUpdated":1696176798000}'),p={name:"3.编程思维体系构建/3.4.6.15.赋予明暗.md"},o=l(`<h1 id="_15-赋予明暗" tabindex="-1">15. 赋予明暗 <a class="header-anchor" href="#_15-赋予明暗" aria-label="Permalink to &quot;15.赋予明暗&quot;">​</a></h1><p>在许多冒险中，灯是一个重要的物品。没有它，你就无法穿越前方的黑暗洞穴。</p><p>在黑暗中的效果因游戏而异。通常情况下，它使命令 &quot;look&quot; 没有效果。在一些游戏中（如 Zork），黑暗是致命的。在其他游戏中，只要你画出了黑暗区域的详细地图，在没有光源的情况下，你仍然可以取得进展。</p><p>我们的游戏将保持在这两者之间；在黑暗中不会让你被杀，但你也不能进入任何通道 (具有光亮的通道将是一个例外)。对我们来说，让玩家跑进一个黑暗的区域，而没有不让他机会回到他来的地方，似乎是不公平的。</p><p>好吧，所以首先，我们来设计在黑暗中玩家无法看到周围环境。</p><h2 id="location-c" tabindex="-1">location.c <a class="header-anchor" href="#location-c" aria-label="Permalink to &quot;location.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;match.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;noun.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeLookAround</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(player-&gt;location))</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You are in </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, player-&gt;location-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;It is very dark in here.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeLook</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getVisible</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;what you want to look at&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj))</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distHereContained:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Hard to see, try to get it first.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distOverthere:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Too far away, move closer please.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distNotHere:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You don&#39;t see any </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> here.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, obj</span><span style="color:#F97583;">-&gt;</span><span style="color:#FFAB70;">details</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(obj);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">movePlayer</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">passage</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, passage-&gt;textGo);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (passage-&gt;destination </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      player-&gt;location </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> passage-&gt;destination;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">executeLookAround</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeGo</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getVisible</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;where you want to go&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">switch</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(player, obj))</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distOverthere:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">movePlayer</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(player</span><span style="color:#F97583;">-&gt;</span><span style="color:#FFAB70;">location</span><span style="color:#E1E4E8;">, obj));</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distNotHere:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You don&#39;t see any </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> here.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">case</span><span style="color:#E1E4E8;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">break</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">movePlayer</span><span style="color:#E1E4E8;">(obj);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;match.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;noun.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeLookAround</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(player-&gt;location))</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You are in </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, player-&gt;location-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;It is very dark in here.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeLook</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getVisible</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;what you want to look at&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj))</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distHereContained:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Hard to see, try to get it first.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distOverthere:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Too far away, move closer please.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distNotHere:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You don&#39;t see any </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> here.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, obj</span><span style="color:#D73A49;">-&gt;</span><span style="color:#E36209;">details</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(obj);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">movePlayer</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">passage</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, passage-&gt;textGo);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (passage-&gt;destination </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      player-&gt;location </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> passage-&gt;destination;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">executeLookAround</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeGo</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getVisible</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;where you want to go&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">switch</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(player, obj))</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distOverthere:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">movePlayer</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(player</span><span style="color:#D73A49;">-&gt;</span><span style="color:#E36209;">location</span><span style="color:#24292E;">, obj));</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distNotHere:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You don&#39;t see any </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> here.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">case</span><span style="color:#24292E;"> distUnknownObject:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6A737D;">// already handled by getVisible</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">break</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">default</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">movePlayer</span><span style="color:#24292E;">(obj);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br></div></div><p>其次，在黑暗中玩家无法看到或使用附近的物体。</p><h2 id="noun-c" tabindex="-1">noun.c <a class="header-anchor" href="#noun-c" aria-label="Permalink to &quot;noun.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">objectHasTag</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (noun </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">noun </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\0</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">**</span><span style="color:#E1E4E8;">tag;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (tag </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj-&gt;tags; </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">tag </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">; tag</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">strcmp</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">tag, noun) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> OBJECT ambiguousNoun;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, DISTANCE </span><span style="color:#FFAB70;">maxDistance</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj, </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">objectHasTag</span><span style="color:#E1E4E8;">(obj, noun) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(from, obj) </span><span style="color:#F97583;">&lt;=</span><span style="color:#E1E4E8;"> maxDistance)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         res </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> res </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">ambiguousNoun;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> res;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getVisible</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">intention</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, player, distOverthere);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, player, distNotHere) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t understand </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, intention);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(player-&gt;location))</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You don&#39;t see any </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> here.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;It&#39;s too dark.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">ambiguousNoun)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Please be specific about which </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> you mean.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">      obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getPossession</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">verb</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">noun</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t understand who you want to </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, verb);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ((obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, from, distHeldContained)) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">getObject</span><span style="color:#E1E4E8;">(noun, player, distNotHere) </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t understand what you want to </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, verb);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You are not holding any </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, noun);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;There appears to be no </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> you can get from </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                noun, from-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;</span><span style="color:#E1E4E8;">ambiguousNoun)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Please be specific about which </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> you want to </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">             noun, verb);</span></span>
<span class="line"><span style="color:#E1E4E8;">      obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You should not be doing that to </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;string.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">objectHasTag</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (noun </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">noun </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\0</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">**</span><span style="color:#24292E;">tag;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (tag </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj-&gt;tags; </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">tag </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">; tag</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">strcmp</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">tag, noun) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> OBJECT ambiguousNoun;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, DISTANCE </span><span style="color:#E36209;">maxDistance</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj, </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">objectHasTag</span><span style="color:#24292E;">(obj, noun) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(from, obj) </span><span style="color:#D73A49;">&lt;=</span><span style="color:#24292E;"> maxDistance)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         res </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> res </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">ambiguousNoun;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> res;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getVisible</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">intention</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, player, distOverthere);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, player, distNotHere) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t understand </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, intention);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(player-&gt;location))</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You don&#39;t see any </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> here.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;It&#39;s too dark.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">ambiguousNoun)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Please be specific about which </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> you mean.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">      obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getPossession</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">verb</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">noun</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t understand who you want to </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, verb);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ((obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, from, distHeldContained)) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">getObject</span><span style="color:#24292E;">(noun, player, distNotHere) </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t understand what you want to </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, verb);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You are not holding any </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, noun);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;There appears to be no </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> you can get from </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                noun, from-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;</span><span style="color:#24292E;">ambiguousNoun)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Please be specific about which </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> you want to </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">             noun, verb);</span></span>
<span class="line"><span style="color:#24292E;">      obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You should not be doing that to </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br></div></div><p>在这两种情况下，我们都使用了一个函数 isLit。它在 misc.c 中被定义（并且使用量增多了）。</p><h2 id="misc-h" tabindex="-1">misc.h <a class="header-anchor" href="#misc-h" aria-label="Permalink to &quot;misc.h&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">enum</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   distSelf,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHeld,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHeldContained,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distLocation,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distHereContained,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distOverthere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distNotHere,</span></span>
<span class="line"><span style="color:#E1E4E8;">   distUnknownObject</span></span>
<span class="line"><span style="color:#E1E4E8;">} DISTANCE;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">container</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">location</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> DISTANCE </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">actorHere</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">location</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">enum</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   distSelf,</span></span>
<span class="line"><span style="color:#24292E;">   distHeld,</span></span>
<span class="line"><span style="color:#24292E;">   distHeldContained,</span></span>
<span class="line"><span style="color:#24292E;">   distLocation,</span></span>
<span class="line"><span style="color:#24292E;">   distHere,</span></span>
<span class="line"><span style="color:#24292E;">   distHereContained,</span></span>
<span class="line"><span style="color:#24292E;">   distOverthere,</span></span>
<span class="line"><span style="color:#24292E;">   distNotHere,</span></span>
<span class="line"><span style="color:#24292E;">   distUnknownObject</span></span>
<span class="line"><span style="color:#24292E;">} DISTANCE;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">container</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">location</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> DISTANCE </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">actorHere</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">location</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="misc-c" tabindex="-1">misc.c <a class="header-anchor" href="#misc-c" aria-label="Permalink to &quot;misc.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">container</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">validObject</span><span style="color:#E1E4E8;">(obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> container;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">target</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">//检测光亮</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">validObject</span><span style="color:#E1E4E8;">(target))</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (target-&gt;light </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">validObject</span><span style="color:#E1E4E8;">(obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj-&gt;light </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">             (</span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(target, obj) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(target, obj-&gt;location)))</span></span>
<span class="line"><span style="color:#E1E4E8;">         {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isNoticeable</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player </span><span style="color:#F97583;">||</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(obj) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(obj-&gt;prospect) </span><span style="color:#F97583;">||</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> to </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from, obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj-&gt;prospect </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> to)</span></span>
<span class="line"><span style="color:#E1E4E8;">         {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">DISTANCE </span><span style="color:#B392F0;">getDistance</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">from</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">to</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> to </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">                               </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distUnknownObject </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">!</span><span style="color:#B392F0;">validObject</span><span style="color:#E1E4E8;">(to)                         </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distNotHere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          to </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> from                               </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distSelf </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from, to)                      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHeld </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">!</span><span style="color:#B392F0;">isNoticeable</span><span style="color:#E1E4E8;">(to)                        </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distNotHere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(to, from)                      </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distLocation </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from-&gt;location, to)            </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from, to-&gt;location)            </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHeldContained </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(from-&gt;location, to-&gt;location)  </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distHereContained </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">getPassage</span><span style="color:#E1E4E8;">(from-&gt;location, to) </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> distOverthere </span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">                                                     distNotHere;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">OBJECT </span><span style="color:#F97583;">*</span><span style="color:#B392F0;">actorHere</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(player-&gt;location, obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> player </span><span style="color:#F97583;">&amp;&amp;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">isNoticeable</span><span style="color:#E1E4E8;">(obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> obj-&gt;health </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">listObjectsAtLocation</span><span style="color:#E1E4E8;">(OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">location</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> objs; obj </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> endOfObjs; obj</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> player </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isHolding</span><span style="color:#E1E4E8;">(location, obj) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isNoticeable</span><span style="color:#E1E4E8;">(obj))</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (count</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">         {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">:</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, location-&gt;contents);</span></span>
<span class="line"><span style="color:#E1E4E8;">         }</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">%s\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> count;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">container</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">validObject</span><span style="color:#24292E;">(obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> container;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">target</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">//检测光亮</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">validObject</span><span style="color:#24292E;">(target))</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (target-&gt;light </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">validObject</span><span style="color:#24292E;">(obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj-&gt;light </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">             (</span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(target, obj) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(target, obj-&gt;location)))</span></span>
<span class="line"><span style="color:#24292E;">         {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isNoticeable</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player </span><span style="color:#D73A49;">||</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(obj) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(obj-&gt;prospect) </span><span style="color:#D73A49;">||</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> to </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from, obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj-&gt;prospect </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> to)</span></span>
<span class="line"><span style="color:#24292E;">         {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">DISTANCE </span><span style="color:#6F42C1;">getDistance</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">from</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">to</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> to </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">                               </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distUnknownObject </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">validObject</span><span style="color:#24292E;">(to)                         </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distNotHere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          to </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> from                               </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distSelf </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from, to)                      </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHeld </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">isNoticeable</span><span style="color:#24292E;">(to)                        </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distNotHere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(to, from)                      </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distLocation </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from-&gt;location, to)            </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from, to-&gt;location)            </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHeldContained </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(from-&gt;location, to-&gt;location)  </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distHereContained </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">getPassage</span><span style="color:#24292E;">(from-&gt;location, to) </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> distOverthere </span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">                                                     distNotHere;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#6F42C1;">actorHere</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(player-&gt;location, obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> player </span><span style="color:#D73A49;">&amp;&amp;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">isNoticeable</span><span style="color:#24292E;">(obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> obj-&gt;health </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> obj;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">int</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">listObjectsAtLocation</span><span style="color:#24292E;">(OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">location</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> objs; obj </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> endOfObjs; obj</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> player </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isHolding</span><span style="color:#24292E;">(location, obj) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isNoticeable</span><span style="color:#24292E;">(obj))</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (count</span><span style="color:#D73A49;">++</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">         {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">:</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, location-&gt;contents);</span></span>
<span class="line"><span style="color:#24292E;">         }</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">%s\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, obj-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> count;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br></div></div><p>注意：</p><ul><li>isLit 将被用来检查一个给定的位置是亮还是暗，但是，仅仅检查位置的属性光线是不够的，因为位置可能被一盏灯照亮。</li><li>isNoticeable 函数相比 isLit 更进一步。它对每个物体都有效，而不仅仅是地点和灯。它还考虑到玩家库存中的物体总是可以被使用，即使是在黑暗中。</li><li>第 60 行：附近的物体仍然隐藏在黑暗中，被视为 &#39; 不在这里 &#39;。这自然可以防止游戏泄露玩家不应该知道的物体的信息。</li></ul><div class="warning custom-block"><p class="custom-block-title">🤔 思考题：你还能想到那哪些可以改进的地方吗？</p></div><p>我们为实现 isLit 函数的功能从而使用了一个新的属性 light。</p><h2 id="object-awk" tabindex="-1">object.awk <a class="header-anchor" href="#object-awk" aria-label="Permalink to &quot;object.awk&quot;">​</a></h2><div class="language-awk vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">awk</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">BEGIN</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   count </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;c2&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">static bool alwaysTrue(void) { return true; }&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">OBJECT objs[] = {&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">/^-</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   outputRecord(</span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$2</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;condition&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;alwaysTrue&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;description&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;NULL&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;tags&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;location&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;NULL&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;destination&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;NULL&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;prospect&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;details&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">You see nothing special.</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;contents&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">You see</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;textGo&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">You can&#39;t get much closer than this.</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;weight&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;99&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;capacity&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;health&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;0&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;open&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;cannotBeOpened&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;close&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;cannotBeClosed&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;lock&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;cannotBeLocked&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;unlock&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;cannotBeUnlocked&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/^[</span><span style="color:#E1E4E8;"> \\t</span><span style="color:#F97583;">]+[</span><span style="color:#E1E4E8;">a</span><span style="color:#F97583;">-</span><span style="color:#E1E4E8;">z</span><span style="color:#F97583;">]/</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   name </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#79B8FF;">$1</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (name </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> prop) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      prop</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">/^[</span><span style="color:#E1E4E8;"> \\t</span><span style="color:#F97583;">]*</span><span style="color:#E1E4E8;">\\{</span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         prop</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> name count;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;c1&quot;</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;static bool &quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;(void) &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;c2&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;#error </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">FILENAME</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot; line &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NR</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;: unknown attribute &#39;&quot;</span><span style="color:#E1E4E8;"> name </span><span style="color:#9ECBFF;">&quot;&#39;</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">/^</span><span style="color:#6A737D;">#include/ ? &quot;c1&quot; : &quot;h&quot;) {</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">END</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">   outputRecord(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">};&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;h&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">#define endOfObjs</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">(objs + &quot;</span><span style="color:#E1E4E8;"> count </span><span style="color:#9ECBFF;">&quot;)&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">#define validObject(obj)</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> \\</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#9ECBFF;">&quot;((obj) != NULL &amp;&amp; (*(obj)-&gt;condition)())&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">outputRecord</span><span style="color:#E1E4E8;">(separator)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;h&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;#define &quot;</span><span style="color:#E1E4E8;"> obj </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">(objs + &quot;</span><span style="color:#E1E4E8;"> count </span><span style="color:#9ECBFF;">&quot;)&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;c1&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;static const char *tags&quot;</span><span style="color:#E1E4E8;"> count </span><span style="color:#9ECBFF;">&quot;[] = {&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;tags&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;, NULL};&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (pass </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;c2&quot;</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">{</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">/* &quot;</span><span style="color:#E1E4E8;"> count </span><span style="color:#9ECBFF;">&quot; = &quot;</span><span style="color:#E1E4E8;"> obj </span><span style="color:#9ECBFF;">&quot; */&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;condition&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;description&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">tags&quot;</span><span style="color:#E1E4E8;"> count </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;location&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;destination&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;prospect&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;prospect&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;destination&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;details&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;contents&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;textGo&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;weight&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;capacity&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;health&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;open&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;close&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;lock&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;,&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> prop</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;unlock&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">}&quot;</span><span style="color:#E1E4E8;"> separator;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">delete</span><span style="color:#E1E4E8;"> prop;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      count</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">BEGIN</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   count </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;c2&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">static bool alwaysTrue(void) { return true; }&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">OBJECT objs[] = {&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">/^-</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   outputRecord(</span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$2</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;condition&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">   </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;alwaysTrue&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;NULL&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;tags&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">        </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">    </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;NULL&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;destination&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;NULL&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;prospect&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">    </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;details&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">     </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">You see nothing special.</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;contents&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">    </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">You see</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;textGo&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">You can&#39;t get much closer than this.</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;weight&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;99&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;capacity&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">    </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;health&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;0&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;open&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">        </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;cannotBeOpened&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;close&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;cannotBeClosed&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;lock&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">        </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;cannotBeLocked&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;unlock&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;cannotBeUnlocked&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">obj </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/^[</span><span style="color:#24292E;"> \\t</span><span style="color:#D73A49;">]+[</span><span style="color:#24292E;">a</span><span style="color:#D73A49;">-</span><span style="color:#24292E;">z</span><span style="color:#D73A49;">]/</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   name </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#005CC5;">$1</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (name </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> prop) {</span></span>
<span class="line"><span style="color:#24292E;">      prop</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">/^[</span><span style="color:#24292E;"> \\t</span><span style="color:#D73A49;">]*</span><span style="color:#24292E;">\\{</span><span style="color:#D73A49;">/</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">         prop</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> name count;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;c1&quot;</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;static bool &quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;(void) &quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;c2&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;#error </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">FILENAME</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot; line &quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NR</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;: unknown attribute &#39;&quot;</span><span style="color:#24292E;"> name </span><span style="color:#032F62;">&quot;&#39;</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">!</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">/^</span><span style="color:#6A737D;">#include/ ? &quot;c1&quot; : &quot;h&quot;) {</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">print</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">END</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">   outputRecord(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">};&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;h&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">#define endOfObjs</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">(objs + &quot;</span><span style="color:#24292E;"> count </span><span style="color:#032F62;">&quot;)&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">#define validObject(obj)</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> \\</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#032F62;">&quot;((obj) != NULL &amp;&amp; (*(obj)-&gt;condition)())&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">outputRecord</span><span style="color:#24292E;">(separator)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj) {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;h&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;#define &quot;</span><span style="color:#24292E;"> obj </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">(objs + &quot;</span><span style="color:#24292E;"> count </span><span style="color:#032F62;">&quot;)&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;c1&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;static const char *tags&quot;</span><span style="color:#24292E;"> count </span><span style="color:#032F62;">&quot;[] = {&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;tags&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;, NULL};&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (pass </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;c2&quot;</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">{</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">/* &quot;</span><span style="color:#24292E;"> count </span><span style="color:#032F62;">&quot; = &quot;</span><span style="color:#24292E;"> obj </span><span style="color:#032F62;">&quot; */&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;condition&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;description&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">tags&quot;</span><span style="color:#24292E;"> count </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;destination&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;prospect&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;prospect&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;destination&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;details&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;contents&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;textGo&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;weight&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;capacity&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;health&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;open&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;close&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;lock&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;,&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> prop</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;unlock&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">}&quot;</span><span style="color:#24292E;"> separator;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> prop;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      count</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br></div></div><p>默认情况下，亮度为零意味着一个物体不发光。在大白天的每一个地点（通常是除了地下的所有地点）都会被赋予一个正 (大于 0) 的光线值。其实是什么值并不重要，只要它不是零就可以了。我们还将添加一盏灯，玩家可以携带它来穿越黑暗区域。</p><h2 id="object-txt" tabindex="-1">object.txt <a class="header-anchor" href="#object-txt" aria-label="Permalink to &quot;object.txt&quot;">​</a></h2><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">#include &lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">#include &lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#e1e4e8;">#include &quot;object.h&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">#include &quot;toggle.h&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">typedef struct object {</span></span>
<span class="line"><span style="color:#e1e4e8;">   bool         (*condition)(void);</span></span>
<span class="line"><span style="color:#e1e4e8;">   const char    *description;</span></span>
<span class="line"><span style="color:#e1e4e8;">   const char   **tags;</span></span>
<span class="line"><span style="color:#e1e4e8;">   struct object *location;</span></span>
<span class="line"><span style="color:#e1e4e8;">   struct object *destination;</span></span>
<span class="line"><span style="color:#e1e4e8;">   struct object *prospect;</span></span>
<span class="line"><span style="color:#e1e4e8;">   const char    *details;</span></span>
<span class="line"><span style="color:#e1e4e8;">   const char    *contents;</span></span>
<span class="line"><span style="color:#e1e4e8;">   const char    *textGo;</span></span>
<span class="line"><span style="color:#e1e4e8;">   int            weight;</span></span>
<span class="line"><span style="color:#e1e4e8;">   int            capacity;</span></span>
<span class="line"><span style="color:#e1e4e8;">   int            health;</span></span>
<span class="line"><span style="color:#e1e4e8;">   int            light;</span></span>
<span class="line"><span style="color:#e1e4e8;">   void         (*open)(void);</span></span>
<span class="line"><span style="color:#e1e4e8;">   void         (*close)(void);</span></span>
<span class="line"><span style="color:#e1e4e8;">   void         (*lock)(void);</span></span>
<span class="line"><span style="color:#e1e4e8;">   void         (*unlock)(void);</span></span>
<span class="line"><span style="color:#e1e4e8;">} OBJECT;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">extern OBJECT objs[];</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- field</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;an open field&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;field&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The field is a nice and quiet place under a clear blue sky.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     capacity    9999</span></span>
<span class="line"><span style="color:#e1e4e8;">     light       100</span></span>
<span class="line"><span style="color:#e1e4e8;">     //到目前为止，场地是唯一有 &quot;自然 &quot;光线的地方。</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a little cave&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;cave&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The cave is just a cold, damp, rocky chamber.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     capacity    9999</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- silver</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a silver coin&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;silver&quot;, &quot;coin&quot;, &quot;silver coin&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    field</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The coin has an eagle on the obverse.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      1</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- gold</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a gold coin&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;gold&quot;, &quot;coin&quot;, &quot;gold coin&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    openBox</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The shiny coin seems to be a rare and priceless artefact.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      1</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- guard</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a burly guard&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;guard&quot;, &quot;burly guard&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    field</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The guard is a really big fellow.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     contents    &quot;He has&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     health      100</span></span>
<span class="line"><span style="color:#e1e4e8;">     capacity    20</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- player</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;yourself&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;yourself&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    field</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;You would need a mirror to look at yourself.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     contents    &quot;You have&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     health      100</span></span>
<span class="line"><span style="color:#e1e4e8;">     capacity    20</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- intoCave</span></span>
<span class="line"><span style="color:#e1e4e8;">     condition   { return guard-&gt;health == 0 || silver-&gt;location == guard; }</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a cave entrance to the east&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;east&quot;, &quot;entrance&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    field</span></span>
<span class="line"><span style="color:#e1e4e8;">     destination cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The entrance is just a narrow opening in a small outcrop.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;You walk into the cave.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- intoCaveBlocked</span></span>
<span class="line"><span style="color:#e1e4e8;">     condition   { return guard-&gt;health &gt; 0 &amp;&amp; silver-&gt;location != guard; }</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a cave entrance to the east&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;east&quot;, &quot;entrance&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    field</span></span>
<span class="line"><span style="color:#e1e4e8;">     prospect    cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The entrance is just a narrow opening in a small outcrop.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;The guard stops you from walking into the cave.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- exitCave</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;an exit to the west&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;west&quot;, &quot;exit&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     destination field</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;Sunlight pours in through an opening in the cave&#39;s wall.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;You walk out of the cave.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- wallField</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;dense forest all around&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;west&quot;, &quot;north&quot;, &quot;south&quot;, &quot;forest&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    field</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The field is surrounded by trees and undergrowth.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;Dense forest is blocking the way.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- wallCave</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;solid rock all around&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;east&quot;, &quot;north&quot;, &quot;rock&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;Carved in stone is a secret password &#39;abccb&#39;.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;Solid rock is blocking the way.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- backroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a backroom&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;backroom&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The room is dusty and messy.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     capacity    9999</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- wallBackroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;solid rock all around&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;east&quot;, &quot;west&quot;, &quot;south&quot;, &quot;rock&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    backroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;Trendy wallpaper covers the rock walls.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;Solid rock is blocking the way.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- openDoorToBackroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;an open door to the south&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;south&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     destination backroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The door is open.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;You walk through the door into a backroom.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#e1e4e8;">     close       toggleDoorToBackroom</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- closedDoorToBackroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a closed door to the south&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;south&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     prospect    backroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        toggleDoorToBackroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- openDoorToCave</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;an open door to the north&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;north&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     destination cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The door is open.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;You walk through the door into the cave.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#e1e4e8;">     close       toggleDoorToCave</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- closedDoorToCave</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a closed door to the north&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;north&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    backroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     prospect    cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     textGo      &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        toggleDoorToCave</span></span>
<span class="line"><span style="color:#e1e4e8;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- openBox</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a wooden box&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;box&quot;, &quot;wooden box&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The box is open.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      5</span></span>
<span class="line"><span style="color:#e1e4e8;">     capacity    10</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#e1e4e8;">     close       toggleBox</span></span>
<span class="line"><span style="color:#e1e4e8;">     lock        isStillOpen</span></span>
<span class="line"><span style="color:#e1e4e8;">     unlock      isAlreadyOpen</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- closedBox</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a wooden box&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;box&quot;, &quot;wooden box&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The box is closed.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      5</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        toggleBox</span></span>
<span class="line"><span style="color:#e1e4e8;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#e1e4e8;">     lock        toggleBoxLock</span></span>
<span class="line"><span style="color:#e1e4e8;">     unlock      isAlreadyUnlocked</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- lockedBox</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a wooden box&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;box&quot;, &quot;wooden box&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    backroom</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The box is closed.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      5</span></span>
<span class="line"><span style="color:#e1e4e8;">     open        isStillLocked</span></span>
<span class="line"><span style="color:#e1e4e8;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#e1e4e8;">     lock        isAlreadyLocked</span></span>
<span class="line"><span style="color:#e1e4e8;">     unlock      toggleBoxLock</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- keyForBox</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a tiny key&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;key&quot;, &quot;tiny key&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    cave</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The key is really small and shiny.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      1</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- lampOff</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a lamp&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;lamp&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     location    field</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The lamp is off.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      5</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">- lampOn</span></span>
<span class="line"><span style="color:#e1e4e8;">     description &quot;a lamp&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     tags        &quot;lamp&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     details     &quot;The lamp is on.&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;">     weight      5</span></span>
<span class="line"><span style="color:#e1e4e8;">     light       100</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">#include &lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#24292e;">#include &lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#24292e;">#include &quot;object.h&quot;</span></span>
<span class="line"><span style="color:#24292e;">#include &quot;toggle.h&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">typedef struct object {</span></span>
<span class="line"><span style="color:#24292e;">   bool         (*condition)(void);</span></span>
<span class="line"><span style="color:#24292e;">   const char    *description;</span></span>
<span class="line"><span style="color:#24292e;">   const char   **tags;</span></span>
<span class="line"><span style="color:#24292e;">   struct object *location;</span></span>
<span class="line"><span style="color:#24292e;">   struct object *destination;</span></span>
<span class="line"><span style="color:#24292e;">   struct object *prospect;</span></span>
<span class="line"><span style="color:#24292e;">   const char    *details;</span></span>
<span class="line"><span style="color:#24292e;">   const char    *contents;</span></span>
<span class="line"><span style="color:#24292e;">   const char    *textGo;</span></span>
<span class="line"><span style="color:#24292e;">   int            weight;</span></span>
<span class="line"><span style="color:#24292e;">   int            capacity;</span></span>
<span class="line"><span style="color:#24292e;">   int            health;</span></span>
<span class="line"><span style="color:#24292e;">   int            light;</span></span>
<span class="line"><span style="color:#24292e;">   void         (*open)(void);</span></span>
<span class="line"><span style="color:#24292e;">   void         (*close)(void);</span></span>
<span class="line"><span style="color:#24292e;">   void         (*lock)(void);</span></span>
<span class="line"><span style="color:#24292e;">   void         (*unlock)(void);</span></span>
<span class="line"><span style="color:#24292e;">} OBJECT;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">extern OBJECT objs[];</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- field</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;an open field&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;field&quot;</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The field is a nice and quiet place under a clear blue sky.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     capacity    9999</span></span>
<span class="line"><span style="color:#24292e;">     light       100</span></span>
<span class="line"><span style="color:#24292e;">     //到目前为止，场地是唯一有 &quot;自然 &quot;光线的地方。</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- cave</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a little cave&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;cave&quot;</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The cave is just a cold, damp, rocky chamber.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     capacity    9999</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- silver</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a silver coin&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;silver&quot;, &quot;coin&quot;, &quot;silver coin&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    field</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The coin has an eagle on the obverse.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      1</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- gold</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a gold coin&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;gold&quot;, &quot;coin&quot;, &quot;gold coin&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    openBox</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The shiny coin seems to be a rare and priceless artefact.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      1</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- guard</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a burly guard&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;guard&quot;, &quot;burly guard&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    field</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The guard is a really big fellow.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     contents    &quot;He has&quot;</span></span>
<span class="line"><span style="color:#24292e;">     health      100</span></span>
<span class="line"><span style="color:#24292e;">     capacity    20</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- player</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;yourself&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;yourself&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    field</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;You would need a mirror to look at yourself.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     contents    &quot;You have&quot;</span></span>
<span class="line"><span style="color:#24292e;">     health      100</span></span>
<span class="line"><span style="color:#24292e;">     capacity    20</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- intoCave</span></span>
<span class="line"><span style="color:#24292e;">     condition   { return guard-&gt;health == 0 || silver-&gt;location == guard; }</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a cave entrance to the east&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;east&quot;, &quot;entrance&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    field</span></span>
<span class="line"><span style="color:#24292e;">     destination cave</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The entrance is just a narrow opening in a small outcrop.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;You walk into the cave.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- intoCaveBlocked</span></span>
<span class="line"><span style="color:#24292e;">     condition   { return guard-&gt;health &gt; 0 &amp;&amp; silver-&gt;location != guard; }</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a cave entrance to the east&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;east&quot;, &quot;entrance&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    field</span></span>
<span class="line"><span style="color:#24292e;">     prospect    cave</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The entrance is just a narrow opening in a small outcrop.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;The guard stops you from walking into the cave.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- exitCave</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;an exit to the west&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;west&quot;, &quot;exit&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    cave</span></span>
<span class="line"><span style="color:#24292e;">     destination field</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;Sunlight pours in through an opening in the cave&#39;s wall.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;You walk out of the cave.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- wallField</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;dense forest all around&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;west&quot;, &quot;north&quot;, &quot;south&quot;, &quot;forest&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    field</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The field is surrounded by trees and undergrowth.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;Dense forest is blocking the way.&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- wallCave</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;solid rock all around&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;east&quot;, &quot;north&quot;, &quot;rock&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    cave</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;Carved in stone is a secret password &#39;abccb&#39;.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;Solid rock is blocking the way.&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- backroom</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a backroom&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;backroom&quot;</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The room is dusty and messy.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     capacity    9999</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- wallBackroom</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;solid rock all around&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;east&quot;, &quot;west&quot;, &quot;south&quot;, &quot;rock&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    backroom</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;Trendy wallpaper covers the rock walls.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;Solid rock is blocking the way.&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- openDoorToBackroom</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;an open door to the south&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;south&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#24292e;">     destination backroom</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The door is open.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;You walk through the door into a backroom.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#24292e;">     close       toggleDoorToBackroom</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- closedDoorToBackroom</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a closed door to the south&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;south&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    cave</span></span>
<span class="line"><span style="color:#24292e;">     prospect    backroom</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     open        toggleDoorToBackroom</span></span>
<span class="line"><span style="color:#24292e;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- openDoorToCave</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;an open door to the north&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;north&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#24292e;">     destination cave</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The door is open.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;You walk through the door into the cave.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#24292e;">     close       toggleDoorToCave</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- closedDoorToCave</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a closed door to the north&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;north&quot;, &quot;door&quot;, &quot;doorway&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    backroom</span></span>
<span class="line"><span style="color:#24292e;">     prospect    cave</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     textGo      &quot;The door is closed.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     open        toggleDoorToCave</span></span>
<span class="line"><span style="color:#24292e;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- openBox</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a wooden box&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;box&quot;, &quot;wooden box&quot;</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The box is open.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      5</span></span>
<span class="line"><span style="color:#24292e;">     capacity    10</span></span>
<span class="line"><span style="color:#24292e;">     open        isAlreadyOpen</span></span>
<span class="line"><span style="color:#24292e;">     close       toggleBox</span></span>
<span class="line"><span style="color:#24292e;">     lock        isStillOpen</span></span>
<span class="line"><span style="color:#24292e;">     unlock      isAlreadyOpen</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- closedBox</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a wooden box&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;box&quot;, &quot;wooden box&quot;</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The box is closed.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      5</span></span>
<span class="line"><span style="color:#24292e;">     open        toggleBox</span></span>
<span class="line"><span style="color:#24292e;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#24292e;">     lock        toggleBoxLock</span></span>
<span class="line"><span style="color:#24292e;">     unlock      isAlreadyUnlocked</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- lockedBox</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a wooden box&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;box&quot;, &quot;wooden box&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    backroom</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The box is closed.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      5</span></span>
<span class="line"><span style="color:#24292e;">     open        isStillLocked</span></span>
<span class="line"><span style="color:#24292e;">     close       isAlreadyClosed</span></span>
<span class="line"><span style="color:#24292e;">     lock        isAlreadyLocked</span></span>
<span class="line"><span style="color:#24292e;">     unlock      toggleBoxLock</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- keyForBox</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a tiny key&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;key&quot;, &quot;tiny key&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    cave</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The key is really small and shiny.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      1</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- lampOff</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a lamp&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;lamp&quot;</span></span>
<span class="line"><span style="color:#24292e;">     location    field</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The lamp is off.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      5</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">- lampOn</span></span>
<span class="line"><span style="color:#24292e;">     description &quot;a lamp&quot;</span></span>
<span class="line"><span style="color:#24292e;">     tags        &quot;lamp&quot;</span></span>
<span class="line"><span style="color:#24292e;">     details     &quot;The lamp is on.&quot;</span></span>
<span class="line"><span style="color:#24292e;">     weight      5</span></span>
<span class="line"><span style="color:#24292e;">     light       100</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br><span class="line-number">175</span><br><span class="line-number">176</span><br><span class="line-number">177</span><br><span class="line-number">178</span><br><span class="line-number">179</span><br><span class="line-number">180</span><br><span class="line-number">181</span><br><span class="line-number">182</span><br><span class="line-number">183</span><br><span class="line-number">184</span><br><span class="line-number">185</span><br><span class="line-number">186</span><br><span class="line-number">187</span><br><span class="line-number">188</span><br><span class="line-number">189</span><br><span class="line-number">190</span><br><span class="line-number">191</span><br><span class="line-number">192</span><br><span class="line-number">193</span><br><span class="line-number">194</span><br><span class="line-number">195</span><br><span class="line-number">196</span><br><span class="line-number">197</span><br><span class="line-number">198</span><br><span class="line-number">199</span><br><span class="line-number">200</span><br><span class="line-number">201</span><br><span class="line-number">202</span><br><span class="line-number">203</span><br><span class="line-number">204</span><br><span class="line-number">205</span><br><span class="line-number">206</span><br><span class="line-number">207</span><br><span class="line-number">208</span><br><span class="line-number">209</span><br><span class="line-number">210</span><br><span class="line-number">211</span><br><span class="line-number">212</span><br><span class="line-number">213</span><br><span class="line-number">214</span><br><span class="line-number">215</span><br><span class="line-number">216</span><br><span class="line-number">217</span><br><span class="line-number">218</span><br><span class="line-number">219</span><br></div></div><p>注意：对于灯，我们实际上有两个对象：打开的灯和关闭的灯，但玩家一次只能看到一个。它们一起作为一个单一的项目。</p><p>我们将添加一些命令，我们可以用来打开和关闭灯。</p><h2 id="parsexec-c" tabindex="-1">parsexec.c <a class="header-anchor" href="#parsexec-c" aria-label="Permalink to &quot;parsexec.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;ctype.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;match.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;location.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;inventory.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;inventory2.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;openclose.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;onoff.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">typedef</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">struct</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">pattern;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">function)(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">} COMMAND;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeQuit</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeNoMatch</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">src </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">params;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">int</span><span style="color:#E1E4E8;"> len;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (len </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; </span><span style="color:#FFAB70;">src</span><span style="color:#E1E4E8;">[len] </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\0</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#B392F0;">isspace</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">src</span><span style="color:#E1E4E8;">[len]); len</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (len </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;I don&#39;t know how to &#39;</span><span style="color:#79B8FF;">%.*s</span><span style="color:#9ECBFF;">&#39;.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, len, src);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">parseAndExecute</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">input</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> COMMAND commands</span><span style="color:#F97583;">[]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;quit&quot;</span><span style="color:#E1E4E8;">                , executeQuit       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;look&quot;</span><span style="color:#E1E4E8;">                , executeLookAround },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;look around&quot;</span><span style="color:#E1E4E8;">         , executeLookAround },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;look at A&quot;</span><span style="color:#E1E4E8;">           , executeLook       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;look A&quot;</span><span style="color:#E1E4E8;">              , executeLook       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;examine A&quot;</span><span style="color:#E1E4E8;">           , executeLook       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;go to A&quot;</span><span style="color:#E1E4E8;">             , executeGo         },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;go A&quot;</span><span style="color:#E1E4E8;">                , executeGo         },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;get A from B&quot;</span><span style="color:#E1E4E8;">        , executeGetFrom    },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;get A&quot;</span><span style="color:#E1E4E8;">               , executeGet        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;put A in B&quot;</span><span style="color:#E1E4E8;">          , executePutIn      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;drop A in B&quot;</span><span style="color:#E1E4E8;">         , executePutIn      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;drop A&quot;</span><span style="color:#E1E4E8;">              , executeDrop       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;ask A from B&quot;</span><span style="color:#E1E4E8;">        , executeAskFrom    },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;ask A&quot;</span><span style="color:#E1E4E8;">               , executeAsk        },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;give A to B&quot;</span><span style="color:#E1E4E8;">         , executeGiveTo     },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;give A&quot;</span><span style="color:#E1E4E8;">              , executeGive       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;inventory&quot;</span><span style="color:#E1E4E8;">           , executeInventory  },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;open A&quot;</span><span style="color:#E1E4E8;">              , executeOpen       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;close A&quot;</span><span style="color:#E1E4E8;">             , executeClose      },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;lock A&quot;</span><span style="color:#E1E4E8;">              , executeLock       },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;unlock A&quot;</span><span style="color:#E1E4E8;">            , executeUnlock     },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;turn on A&quot;</span><span style="color:#E1E4E8;">           , executeTurnOn     },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;turn off A&quot;</span><span style="color:#E1E4E8;">          , executeTurnOff    },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;turn A on&quot;</span><span style="color:#E1E4E8;">           , executeTurnOn     },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;turn A off&quot;</span><span style="color:#E1E4E8;">          , executeTurnOff    },</span></span>
<span class="line"><span style="color:#E1E4E8;">      { </span><span style="color:#9ECBFF;">&quot;A&quot;</span><span style="color:#E1E4E8;">                   , executeNoMatch    }</span></span>
<span class="line"><span style="color:#E1E4E8;">   };</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> COMMAND </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">cmd;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (cmd </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> commands; </span><span style="color:#F97583;">!</span><span style="color:#B392F0;">matchCommand</span><span style="color:#E1E4E8;">(input, cmd-&gt;pattern); cmd</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">cmd-&gt;function)();</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;ctype.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;match.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;location.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;inventory.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;inventory2.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;openclose.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;onoff.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">typedef</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">struct</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">pattern;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">function)(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">} COMMAND;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeQuit</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeNoMatch</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">src </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">params;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">int</span><span style="color:#24292E;"> len;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (len </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; </span><span style="color:#E36209;">src</span><span style="color:#24292E;">[len] </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\0</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">isspace</span><span style="color:#24292E;">(</span><span style="color:#E36209;">src</span><span style="color:#24292E;">[len]); len</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (len </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;I don&#39;t know how to &#39;</span><span style="color:#005CC5;">%.*s</span><span style="color:#032F62;">&#39;.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, len, src);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">parseAndExecute</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">input</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> COMMAND commands</span><span style="color:#D73A49;">[]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;quit&quot;</span><span style="color:#24292E;">                , executeQuit       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;look&quot;</span><span style="color:#24292E;">                , executeLookAround },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;look around&quot;</span><span style="color:#24292E;">         , executeLookAround },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;look at A&quot;</span><span style="color:#24292E;">           , executeLook       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;look A&quot;</span><span style="color:#24292E;">              , executeLook       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;examine A&quot;</span><span style="color:#24292E;">           , executeLook       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;go to A&quot;</span><span style="color:#24292E;">             , executeGo         },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;go A&quot;</span><span style="color:#24292E;">                , executeGo         },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;get A from B&quot;</span><span style="color:#24292E;">        , executeGetFrom    },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;get A&quot;</span><span style="color:#24292E;">               , executeGet        },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;put A in B&quot;</span><span style="color:#24292E;">          , executePutIn      },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;drop A in B&quot;</span><span style="color:#24292E;">         , executePutIn      },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;drop A&quot;</span><span style="color:#24292E;">              , executeDrop       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;ask A from B&quot;</span><span style="color:#24292E;">        , executeAskFrom    },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;ask A&quot;</span><span style="color:#24292E;">               , executeAsk        },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;give A to B&quot;</span><span style="color:#24292E;">         , executeGiveTo     },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;give A&quot;</span><span style="color:#24292E;">              , executeGive       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;inventory&quot;</span><span style="color:#24292E;">           , executeInventory  },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;open A&quot;</span><span style="color:#24292E;">              , executeOpen       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;close A&quot;</span><span style="color:#24292E;">             , executeClose      },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;lock A&quot;</span><span style="color:#24292E;">              , executeLock       },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;unlock A&quot;</span><span style="color:#24292E;">            , executeUnlock     },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;turn on A&quot;</span><span style="color:#24292E;">           , executeTurnOn     },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;turn off A&quot;</span><span style="color:#24292E;">          , executeTurnOff    },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;turn A on&quot;</span><span style="color:#24292E;">           , executeTurnOn     },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;turn A off&quot;</span><span style="color:#24292E;">          , executeTurnOff    },</span></span>
<span class="line"><span style="color:#24292E;">      { </span><span style="color:#032F62;">&quot;A&quot;</span><span style="color:#24292E;">                   , executeNoMatch    }</span></span>
<span class="line"><span style="color:#24292E;">   };</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> COMMAND </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">cmd;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (cmd </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> commands; </span><span style="color:#D73A49;">!</span><span style="color:#6F42C1;">matchCommand</span><span style="color:#24292E;">(input, cmd-&gt;pattern); cmd</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">*</span><span style="color:#24292E;">cmd-&gt;function)();</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br></div></div><p>下面是这些命令的实现。</p><h2 id="onoff-h" tabindex="-1">onoff.h <a class="header-anchor" href="#onoff-h" aria-label="Permalink to &quot;onoff.h&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeTurnOn</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeTurnOff</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeTurnOn</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeTurnOff</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="onoff-c" tabindex="-1">onoff.c <a class="header-anchor" href="#onoff-c" aria-label="Permalink to &quot;onoff.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;match.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;reach.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;toggle.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeTurnOn</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reachableObject</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;what you want to turn on&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> lampOff)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">toggleLamp</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> lampOn </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;The lamp is already on.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                              </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;You cannot turn that on.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">executeTurnOff</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">reachableObject</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;what you want to turn off&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">params</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> lampOn)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">toggleLamp</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(obj </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> lampOff </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;The lamp is already off.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">                               </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;You cannot turn that off.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;match.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;reach.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;toggle.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeTurnOn</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reachableObject</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;what you want to turn on&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> lampOff)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">toggleLamp</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> lampOn </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;The lamp is already on.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">                              </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;You cannot turn that on.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">executeTurnOff</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">reachableObject</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;what you want to turn off&quot;</span><span style="color:#24292E;">, </span><span style="color:#E36209;">params</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> lampOn)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">toggleLamp</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(obj </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> lampOff </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;The lamp is already off.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">                               </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;You cannot turn that off.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><p>为了打开和关闭灯，我们将使用我们用来打开和关闭门和盒子的相同技巧（见第 13 章）。</p><h2 id="toggle-h" tabindex="-1">toggle.h <a class="header-anchor" href="#toggle-h" aria-label="Permalink to &quot;toggle.h&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeOpened</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeClosed</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeLocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeUnlocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyOpen</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyClosed</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyLocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyUnlocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isStillOpen</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isStillLocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleDoorToBackroom</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleDoorToCave</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleBox</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleBoxLock</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">extern</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleLamp</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeOpened</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeClosed</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeLocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeUnlocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyOpen</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyClosed</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyLocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyUnlocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isStillOpen</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isStillLocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleDoorToBackroom</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleDoorToCave</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleBox</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleBoxLock</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">extern</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleLamp</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="toggle-c" tabindex="-1">toggle.c <a class="header-anchor" href="#toggle-c" aria-label="Permalink to &quot;toggle.c&quot;">​</a></h2><div class="language-c vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#F97583;">#include</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;location.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">static</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">verb1</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">                          </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">verb2</span><span style="color:#E1E4E8;">, OBJECT </span><span style="color:#F97583;">*</span><span style="color:#FFAB70;">obj2</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">tmp </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj1-&gt;location;</span></span>
<span class="line"><span style="color:#E1E4E8;">   OBJECT </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tmp </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> obj1 </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> obj2;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">char</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">*</span><span style="color:#E1E4E8;">verb </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tmp </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> verb1 </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> verb2;</span></span>
<span class="line"><span style="color:#E1E4E8;">   obj1-&gt;location </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> obj2-&gt;location;</span></span>
<span class="line"><span style="color:#E1E4E8;">   obj2-&gt;location </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> tmp;</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (verb </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">) </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;"> </span><span style="color:#79B8FF;">%s</span><span style="color:#9ECBFF;">.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">, verb, obj-&gt;description);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeOpened</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)    { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That cannot be opened.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);    }</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeClosed</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)    { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That cannot be closed.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);    }</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeLocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)    { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That cannot be locked.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);    }</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cannotBeUnlocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)  { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That cannot be unlocked.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyOpen</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)     { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That is already open.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);     }</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyClosed</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)   { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That is already closed.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);   }</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyLocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)   { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That is already locked.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);   }</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isAlreadyUnlocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">) { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That is already unlocked.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">); }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isStillOpen</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)       { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That is still open.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);       }</span></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isStillLocked</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)     { </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;That is locked.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);           }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleDoorToBackroom</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">, openDoorToCave, </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">, closedDoorToCave);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;close&quot;</span><span style="color:#E1E4E8;">, openDoorToBackroom, </span><span style="color:#9ECBFF;">&quot;open&quot;</span><span style="color:#E1E4E8;">, closedDoorToBackroom);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleDoorToCave</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">, openDoorToBackroom, </span><span style="color:#79B8FF;">NULL</span><span style="color:#E1E4E8;">, closedDoorToBackroom);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;close&quot;</span><span style="color:#E1E4E8;">, openDoorToCave, </span><span style="color:#9ECBFF;">&quot;open&quot;</span><span style="color:#E1E4E8;">, closedDoorToCave);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleBox</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;close&quot;</span><span style="color:#E1E4E8;">, openBox, </span><span style="color:#9ECBFF;">&quot;open&quot;</span><span style="color:#E1E4E8;">, closedBox);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleBoxLock</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (keyForBox-&gt;location </span><span style="color:#F97583;">==</span><span style="color:#E1E4E8;"> player)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;lock&quot;</span><span style="color:#E1E4E8;">, closedBox, </span><span style="color:#9ECBFF;">&quot;unlock&quot;</span><span style="color:#E1E4E8;">, lockedBox);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;You don&#39;t have a key.</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">toggleLamp</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;"> oldLit </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#B392F0;">swapLocations</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;turn off&quot;</span><span style="color:#E1E4E8;">, lampOn, </span><span style="color:#9ECBFF;">&quot;turn on&quot;</span><span style="color:#E1E4E8;">, lampOff);</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (oldLit </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">isLit</span><span style="color:#E1E4E8;">(player-&gt;location))</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">printf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">executeLookAround</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdbool.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&lt;stdio.h&gt;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;object.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;misc.h&quot;</span></span>
<span class="line"><span style="color:#D73A49;">#include</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;location.h&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">static</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">verb1</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">                          </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">verb2</span><span style="color:#24292E;">, OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#E36209;">obj2</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">tmp </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj1-&gt;location;</span></span>
<span class="line"><span style="color:#24292E;">   OBJECT </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tmp </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> obj1 </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> obj2;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">char</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">*</span><span style="color:#24292E;">verb </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tmp </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> verb1 </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> verb2;</span></span>
<span class="line"><span style="color:#24292E;">   obj1-&gt;location </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> obj2-&gt;location;</span></span>
<span class="line"><span style="color:#24292E;">   obj2-&gt;location </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> tmp;</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (verb </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">) </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;"> </span><span style="color:#005CC5;">%s</span><span style="color:#032F62;">.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">, verb, obj-&gt;description);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeOpened</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)    { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That cannot be opened.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);    }</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeClosed</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)    { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That cannot be closed.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);    }</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeLocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)    { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That cannot be locked.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);    }</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cannotBeUnlocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)  { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That cannot be unlocked.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyOpen</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)     { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That is already open.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);     }</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyClosed</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)   { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That is already closed.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);   }</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyLocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)   { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That is already locked.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);   }</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isAlreadyUnlocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">) { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That is already unlocked.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">); }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isStillOpen</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)       { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That is still open.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);       }</span></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isStillLocked</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)     { </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;That is locked.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);           }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleDoorToBackroom</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">, openDoorToCave, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">, closedDoorToCave);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;close&quot;</span><span style="color:#24292E;">, openDoorToBackroom, </span><span style="color:#032F62;">&quot;open&quot;</span><span style="color:#24292E;">, closedDoorToBackroom);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleDoorToCave</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">, openDoorToBackroom, </span><span style="color:#005CC5;">NULL</span><span style="color:#24292E;">, closedDoorToBackroom);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;close&quot;</span><span style="color:#24292E;">, openDoorToCave, </span><span style="color:#032F62;">&quot;open&quot;</span><span style="color:#24292E;">, closedDoorToCave);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleBox</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;close&quot;</span><span style="color:#24292E;">, openBox, </span><span style="color:#032F62;">&quot;open&quot;</span><span style="color:#24292E;">, closedBox);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleBoxLock</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (keyForBox-&gt;location </span><span style="color:#D73A49;">==</span><span style="color:#24292E;"> player)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;lock&quot;</span><span style="color:#24292E;">, closedBox, </span><span style="color:#032F62;">&quot;unlock&quot;</span><span style="color:#24292E;">, lockedBox);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;You don&#39;t have a key.</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">toggleLamp</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">void</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;"> oldLit </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(player-&gt;location);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#6F42C1;">swapLocations</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;turn off&quot;</span><span style="color:#24292E;">, lampOn, </span><span style="color:#032F62;">&quot;turn on&quot;</span><span style="color:#24292E;">, lampOff);</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (oldLit </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">isLit</span><span style="color:#24292E;">(player-&gt;location))</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">printf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">executeLookAround</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br></div></div><p>注意：当在黑暗区域打开灯光时，我们立即让玩家看一下周围的环境。这与 &#39;go&#39; 的命令的行为是一致的：当你把目光投向一个地方时，&#39;look&#39; 就会自动执行。</p><p>你可能注意到我们在这里做了同样的事情，当把灯关掉的时候，很明显，这只会返回 &quot;这里很黑&quot;，但这似乎也是一个相关的观察。</p><p>那么，既然我们无论如何都在做 &quot;look around&quot; 的工作，64~68 中 &quot;if&quot; 语句的意义何在？好吧，这可以防止在大白天（即在野外）打开或关闭灯时，或在同一房间内任何其他光源仍在工作时，进行无用的 &quot;环顾&quot;。</p><p>最后，我们将在我们生成的地图上标记出黑暗的位置。</p><h2 id="map-awk" tabindex="-1">map.awk <a class="header-anchor" href="#map-awk" aria-label="Permalink to &quot;map.awk&quot;">​</a></h2><div class="language-awk vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">awk</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">BEGIN</span><span style="color:#E1E4E8;">     { </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;digraph map {</span><span style="color:#79B8FF;">\\n\\t</span><span style="color:#9ECBFF;">node [style=filled]&quot;</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"><span style="color:#F97583;">/^-</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">/</span><span style="color:#E1E4E8;">     { outputEdges(); obj </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$2</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">delete</span><span style="color:#E1E4E8;"> a; }</span></span>
<span class="line"><span style="color:#F97583;">/^[</span><span style="color:#E1E4E8;"> \\t</span><span style="color:#F97583;">]/</span><span style="color:#E1E4E8;">  { a</span><span style="color:#F97583;">[</span><span style="color:#79B8FF;">$1</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$2</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"><span style="color:#79B8FF;">END</span><span style="color:#E1E4E8;">       { outputEdges(); outputNodes(); </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;}&quot;</span><span style="color:#E1E4E8;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">outputEdges</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   color</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">obj</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> a</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;light&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">?</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;white&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;grey&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">   outputEdge(a</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;location&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">, a</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;destination&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">   outputEdge(a</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;location&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">, a</span><span style="color:#F97583;">[</span><span style="color:#9ECBFF;">&quot;prospect&quot;</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot; [style=dashed]&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">outputEdge</span><span style="color:#E1E4E8;">(from, to, style)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (to)</span></span>
<span class="line"><span style="color:#E1E4E8;">   {</span></span>
<span class="line"><span style="color:#E1E4E8;">      nodes</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">to</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (from)</span></span>
<span class="line"><span style="color:#E1E4E8;">      {</span></span>
<span class="line"><span style="color:#E1E4E8;">         nodes</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">from</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> from </span><span style="color:#9ECBFF;">&quot; -&gt; &quot;</span><span style="color:#E1E4E8;"> to style;</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">   }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">outputNodes</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (n </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> nodes) </span><span style="color:#F97583;">print</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> n </span><span style="color:#9ECBFF;">&quot; [fillcolor=&quot;</span><span style="color:#E1E4E8;"> color</span><span style="color:#F97583;">[</span><span style="color:#E1E4E8;">n</span><span style="color:#F97583;">]</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;]&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">BEGIN</span><span style="color:#24292E;">     { </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;digraph map {</span><span style="color:#005CC5;">\\n\\t</span><span style="color:#032F62;">node [style=filled]&quot;</span><span style="color:#24292E;">; }</span></span>
<span class="line"><span style="color:#D73A49;">/^-</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">/</span><span style="color:#24292E;">     { outputEdges(); obj </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$2</span><span style="color:#24292E;">; </span><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> a; }</span></span>
<span class="line"><span style="color:#D73A49;">/^[</span><span style="color:#24292E;"> \\t</span><span style="color:#D73A49;">]/</span><span style="color:#24292E;">  { a</span><span style="color:#D73A49;">[</span><span style="color:#005CC5;">$1</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$2</span><span style="color:#24292E;">; }</span></span>
<span class="line"><span style="color:#005CC5;">END</span><span style="color:#24292E;">       { outputEdges(); outputNodes(); </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;}&quot;</span><span style="color:#24292E;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">outputEdges</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   color</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">obj</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> a</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;light&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">?</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;white&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;grey&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">   outputEdge(a</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">, a</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;destination&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">   outputEdge(a</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;location&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">, a</span><span style="color:#D73A49;">[</span><span style="color:#032F62;">&quot;prospect&quot;</span><span style="color:#D73A49;">]</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot; [style=dashed]&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">outputEdge</span><span style="color:#24292E;">(from, to, style)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (to)</span></span>
<span class="line"><span style="color:#24292E;">   {</span></span>
<span class="line"><span style="color:#24292E;">      nodes</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">to</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (from)</span></span>
<span class="line"><span style="color:#24292E;">      {</span></span>
<span class="line"><span style="color:#24292E;">         nodes</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">from</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> from </span><span style="color:#032F62;">&quot; -&gt; &quot;</span><span style="color:#24292E;"> to style;</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">   }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">outputNodes</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (n </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> nodes) </span><span style="color:#D73A49;">print</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> n </span><span style="color:#032F62;">&quot; [fillcolor=&quot;</span><span style="color:#24292E;"> color</span><span style="color:#D73A49;">[</span><span style="color:#24292E;">n</span><span style="color:#D73A49;">]</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;]&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><div class="warning custom-block"><p class="custom-block-title">🤔 思考题：尝试将上面的伪代码用 C 语言实现其功能</p></div><p>玩家们，请注意不要把灯关掉，也不要把它丢掉。如果这样做，那么在黑暗中你将永远无法找回它。换言之，你会被困在黑暗之中！幸运的是，下一章将提供一个撤销笨拙行动的方法。</p><p>输出样例：Welcome to Little Cave Adventure. You are in an open field. You see: a silver coin a burly guard a cave entrance to the east dense forestall around a lamp</p><p>--&gt; get lamp You pick up a lamp.</p><p>--&gt; get coin You pick up a silver coin.</p><p>--&gt; give coin You give a silver coin to a burly guard.</p><p>--&gt; go cave You walk into the cave.</p><p>It is very dark here. You see: an exit to the west</p><p>--&gt; get key It&#39;s too dark.</p><p>--&gt; open door It&#39;s too dark.</p><p>--&gt; go south It&#39;s too dark.</p><p>--&gt; turn lamp on You turn on a lamp.</p><p>You are in a little cave. You see: an exit to the west solid rock all around a closed door to the south a tiny key</p><p>--&gt; look around You are in a little cave. You see: an exit to the west solid rock all around a closed door to the south a tiny key</p><p>--&gt; get key You pick up a tiny key.</p><p>--&gt; open door You open a closed door to the south.</p><p>--&gt; go south You walk through the door into a backroom.</p><p>You are in a backroom. You see: solid rock all around an open door to the north a wooden box</p><p>--&gt; quit</p><p>Bye</p>`,64),e=[o];function t(c,r,y,E,i,u){return n(),a("div",null,e)}const q=s(p,[["render",t]]);export{b as __pageData,q as default};
