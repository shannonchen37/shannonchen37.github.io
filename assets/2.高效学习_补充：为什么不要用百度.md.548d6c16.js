import{_ as t,o as e,c as _,U as a}from"./chunks/framework.489e5108.js";const m=JSON.parse('{"title":"补充：为什么不要用百度","description":"","frontmatter":{},"headers":[],"relativePath":"2.高效学习/补充：为什么不要用百度.md","filePath":"2.高效学习/补充：为什么不要用百度.md","lastUpdated":1696176798000}'),l={name:"2.高效学习/补充：为什么不要用百度.md"},o=a('<h1 id="补充-为什么不要用百度" tabindex="-1">补充：为什么不要用百度 <a class="header-anchor" href="#补充-为什么不要用百度" aria-label="Permalink to &quot;补充：为什么不要用百度&quot;">​</a></h1><p>相信大家都用过百度来搜索一些非技术问题，而且一般很容易找到答案。 但随着问题技术含量的提高，百度的搜索结果会变得越来越不靠谱。 坚持使用百度搜索技术问题，你将很有可能会碰到以下情况之一：</p><ul><li>搜不到相关结果，你感到挫败</li><li>搜到看似相关的结果，但无法解决问题，你在感到挫败之余，也发现自己浪费了不少时间</li><li>你搜到了解决问题的方案，但没有发现原因分析，结果你不知道这个问题背后的细节</li></ul><p>你可能会觉得 &quot;可以解决问题就行，不需要了解问题背后的细节&quot;。 但对于一些问题 (例如编程问题)，你了解这些细节就相当于学到了新的知识，所以你应该去了解这些细节，让自己懂得更多。</p><p>如果谷歌能以更高的概率提供可以解决问题的方案，并且带有原因分析，你应该没有理由使用百度来搜索技术问题。 如果你仍然坚持使用百度，原因就只有一个： 你不想主动去成长。</p><p>你或许会觉得翻阅手册太麻烦了，所以可能会在百度上随便搜一篇博客来尝试寻找解决方案。 但是，你需要明确以下几点：</p><ul><li>你搜到的博客可能也是转载别人的，有可能有坑</li><li>博主只是分享了他的经历，有些说法也不一定准确</li><li>搜到了相关内容，也不一定会有全面的描述</li></ul><p>最重要的是，当你尝试了上述方法而又无法解决问题的时候，你需要明确 &quot;我刚才只是在尝试走捷径，看来我需要试试 RTFM 了&quot;。</p>',8),i=[o];function r(s,p,c,n,d,u){return e(),_("div",null,i)}const f=t(l,[["render",r]]);export{m as __pageData,f as default};
